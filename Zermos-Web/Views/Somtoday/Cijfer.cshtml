@using System.Globalization
@using Zermos_Web.Utilities
@using Item = Zermos_Web.Models.SomtodayGradesModel.Item
@model Zermos_Web.Models.SomtodayGradesModel.sortedGrades

@{
    //for all the grades, set item.samengesteldeToetsen to all the grades where item.resultaatkolomId is the same as item.samengesteldeToetskolomId
    var grades = Model.grades;
    foreach (var grade in grades)
    {
        if (grade.type == "SamengesteldeToetsKolom")
            grade.samengesteldeToetsen = grades.Where(x => grade.resultaatkolomId == x.samengesteldeToetskolomId && x.type == "DeeltoetsKolom").ToList();
    }

    Model.grades = grades;
}

<link rel="stylesheet" href="~/css/somtoday.css"/>

<div class="grades-container">

    <div class="vak" style="height: auto">
        <a onclick="ReplacePage('@Url.Action("CijferStatestieken", "Somtoday", new {vak = Model.vak.afkorting.Capitalize()})')" style="display: flex; align-content: center; justify-content: center; flex-wrap: wrap;">
            <table>
                <tr>
                    <td colspan="2">
                        Cijfer statistieken
                        <i class="fa-solid fa-chart-line" aria-hidden="true"></i>
                    </td>
                </tr>
            </table>
        </a>
    </div>

    @foreach (var grade in Model.grades)
    {
        if (grade.type == "DeeltoetsKolom") continue;

        float geldendResultaat;
        NumberUtils.TryParseFloat(grade.geldendResultaat, out geldendResultaat);
        <div class="vak"@(grade.samengesteldeToetsen != null ? Html.Raw("style=\"height:auto;\"") : "")>
            @if (grade.isExamendossierResultaat)
            {
                <div class="isAllExamGrades">
                    <i class="fa-solid fa-graduation-cap" aria-hidden="true" onclick="happyCappy(this)"></i>
                </div>
            }
            @if (grade.samengesteldeToetsen != null)
            {
                <div class="isAllExamGrades">
                    <i class="fa-solid fa-layer-group" aria-hidden="true" onclick="happyCappy(this)"></i>
                </div>
            }
            <a onclick="@(grade.links[0].id.StringToBase64String().Replace("=", "") + "()")" style="display: flex; align-content: center; justify-content: center; flex-wrap: wrap;">
                <div class="grade-container">
                    <table class="grade-table">
                        <tr class="grade-table-header">
                            <td colspan="2">@grade.vak.naam @(grade.isExamendossierResultaat ? "SE" : "")</td>
                            <td>@(grade.weging == 0 ? grade.examenWeging : grade.weging)x</td>
                            <td class="@(geldendResultaat >= 5.5f ? "sufficient" : "insufficient ")">@geldendResultaat</td>
                        </tr>
                        <tr class="grade-table-body">
                            <td colspan="4" style="text-align: center">
                                @grade.omschrijving
                            </td>
                        </tr>
                    </table>

                    @if (grade.samengesteldeToetsen != null)
                    {
                        <div class="deeltoetsen">
                            @foreach (var deeltoets in grade.samengesteldeToetsen)
                            {
                                float deeltoetsGeldendResultaat;
                                NumberUtils.TryParseFloat(deeltoets.geldendResultaat, out deeltoetsGeldendResultaat);
                                <div class="deeltoetsen-child">
                                    <p colspan="2">@deeltoets.omschrijving</p>
                                    <p>@(deeltoets.weging == 0 ? deeltoets.examenWeging : deeltoets.weging)x</p>
                                    <p class="@(deeltoetsGeldendResultaat >= 5.5f ? "sufficient" : "insufficient ")">@deeltoetsGeldendResultaat</p>
                                </div>
                            }
                        </div>
                    }
                </div>
            </a>
        </div>
    }
</div>

<comp-script>
    var animate = document.getElementsByClassName("animate");
    for (var i = 0; i < animate.length; i++) {
        animate[i].addEventListener("animationend", function() {
            this.classList.remove("animate");
        });
    }
    console.log("Cijfer script loaded");
</comp-script>

<script>

function happyCappy(element) {
    element.classList.remove("animate");
    element.classList.add("animate");
    setTimeout(function() {
        element.classList.remove("animate");
    }, 1000);
}

@foreach (var vak in Model.grades)
{
    if (vak.type == "DeeltoetsKolom") continue;

    string function = "";

    if (vak.samengesteldeToetsen != null)
    {
        function = $"function {vak.links[0].id.StringToBase64String().Replace("=", "")}() {{\n" +
                   $"    new ZermosModal()\n" +
                   $"    .setTitle('{vak.vak.naam + (vak.isExamendossierResultaat ? " SE" : "")}')\n" +
                   $"    .addText(`Omschrijving: {vak.omschrijving}`)\n" +
                   $"    .addText('Weging: {(vak.weging == 0 ? vak.examenWeging : vak.weging)}x')\n" +
                   $"    .addText('Geldend resultaat: {vak.geldendResultaat}')\n" +
                   $"    .addText('Invoerdatum: {vak.datumInvoer.ToString("dd MMMM yyyy HH:mm:ss")}')\n";

        foreach (var deeltoets in vak.samengesteldeToetsen)
        {
        function += $"    .addText(`&ZeroWidthSpace;`)\n" +
                    $"    .addText(`Omschrijving: {deeltoets.omschrijving}`)\n" +
                    $"    .addText('Weging: {(deeltoets.weging == 0 ? deeltoets.examenWeging : deeltoets.weging)}x')\n" +
                    $"    .addText('Geldend resultaat: {deeltoets.geldendResultaat}')\n" +
                    $"    .addText('Invoerdatum: {deeltoets.datumInvoer.ToString("dd MMMM yyyy HH:mm:ss")}')\n";   
        }
        
        function +=$"    .setSubmitButtonLabel('Sluiten')\n" +
                   $"    .open();\n" +
                   $"}}";
    }
    else
    {
        function = $"function {vak.links[0].id.StringToBase64String().Replace("=", "")}() {{\n" +
                   $"    new ZermosModal()\n" +
                   $"    .setTitle('{vak.vak.naam + (vak.isExamendossierResultaat ? " SE" : "")}')\n" +
                   $"    .addText(`Omschrijving: {vak.omschrijving}`)\n" +
                   $"    .addText('Weging: {(vak.weging == 0 ? vak.examenWeging : vak.weging)}x')\n" +
                   $"    .addText('Geldend resultaat: {vak.geldendResultaat}')\n" +
                   $"    .addText('Invoerdatum: {vak.datumInvoer.ToString("dd MMMM yyyy HH:mm:ss")}')\n" +
                   $"    .setSubmitButtonLabel('Sluiten')\n" +
                   $"    .open();\n" +
                   $"}}";
    }

    <text>
@Html.Raw(function)
    </text>
}
</script>