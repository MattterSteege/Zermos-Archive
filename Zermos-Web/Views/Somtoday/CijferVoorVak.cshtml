@using Zermos_Web.Models.SortedSomtodayGradesModel
@using Zermos_Web.Utilities
@model Zermos_Web.Models.SortedSomtodayGradesModel.SortedSomtodayGradesModel 

@{
    //for all the grades, set item.samengesteldeToetsen to all the grades where item.resultaatkolomId is the same as item.samengesteldeToetskolomId 
    var grades = Model.items[0].cijfersSE.Concat(Model.items[0].cijfers).ToList().OrderByDescending(x => x.periode).ThenByDescending(x => x.datumInvoerEerstePoging).ToList();
    
    
}

<link rel="stylesheet" href="~/css/somtoday.css"/>



<div class="grades-container">
    
    <div id="panel1" class="panel" data-settings=""  style="display: flex">
        
        <h1 class="grades-title">@Model.items[0].vakNaam</h1>

        <table class="grade-table" onclick="ReplacePage('@Url.Action("CijferStatistieken", "Somtoday", new { vak = Model.items[0].vakAfkorting.Capitalize() })')">
            <tr class="grade-table-header">
                <td>
                     Cijfer statistieken
                    <i class="fa-solid fa-chart-line" aria-hidden="true"></i>
                </td>
            </tr>
        </table>
        
        @{
            int currentPeriod = 0;
        }
        
        @foreach (var grade in grades)
        {
            //if next grade is in a different period, add a new panel or if it is the last grade
            if (currentPeriod != grade.periode)
            {
                <div class="grades-period">
                    <h1>periode @grade.periode</h1>
                </div>
                currentPeriod = grade.periode;
            }
            
            if (grade.type == "DeeltoetsKolom") continue;

            <table class="grade-table" onclick="@(grade.additionalObjects.resultaatkolom.StringToBase64String().Replace("=", "") + "()")">
                <tr class="grade-table-header">
                    <td colspan="2">
                        @grade.additionalObjects.vaknaam.Capitalize() @(grade.toetssoort == "Schoolexamen" ? "SE" : "")
                    </td>
                    <td></td>
                    <td>@(grade.weging)x</td>
                    <td class="@(grade.cijfer >= 5.5f ? "sufficient" : "insufficient ")">
                        @grade.formattedResultaat
                        @if (grade.toetssoort == "Schoolexamen")
                        {
                            <i class="fa-solid fa-graduation-cap" aria-hidden="true" onclick="happyCappy(this)"></i>
                        }                        
                        @if (grade.type == "SamengesteldeToetsKolom")
                        {
                            <i class="fa-solid fa-layer-group" aria-hidden="true" onclick="happyCappy(this)"></i>
                        }
                    </td>
                </tr>
                <tr class="grade-table-body">
                    <td>
                        @grade.omschrijving
                    </td>
                </tr>
            </table>
        }

    </div>

</div>

<script minimize>
@Context.Items["dmjs"]

    function happyCappy(element) {
     element.classList.remove("animate");
     element.classList.add("animate");
     setTimeout(function() {
         element.classList.remove("animate");
     }, 1000);
    }
</script>