@using System.Globalization
@model Zermos_Web.Models.somtodayHomeworkModel.SomtodayHomeworkModel

@{
    ViewBag.Title = "title";


    var groupedHomework = Model.items.GroupBy(item => item.datumTijd.Date);
    bool nextHomeworkFound = false;
    int dayId = 0;
}

<link rel="stylesheet" href="~/css/somtoday.css" />

<div class="homework-container">
    @foreach (var dayGroup in groupedHomework)
    {
        //if date is after today and nextHomeworkFound is false
        string id = "";
        if (dayGroup.First().datumTijd.Date > DateTime.Now.Date.AddDays(DateTime.Now.Hour < 17 ? -1 : 0) && !nextHomeworkFound)
        {
            id = "next-homework";
            nextHomeworkFound = true;
        }
        
        <div class="homework-day-parent" id="@(id == "" ? dayId : id)">

            <h1>@(dayGroup.First()?.datumTijd.ToString("dddd dd MMMM", new CultureInfo("nl-NL")) ?? "Geen datum!?")</h1>

            @foreach (var homeworkItem in dayGroup)
            {
                <div class="homeworkItem @homeworkItem.studiewijzerItem.huiswerkType?.ToLower() @(homeworkItem.studiewijzerItem.bijlagen?.Count > 0 ? "bijlagen" : "")" id="@homeworkItem.datumTijd.ToUnixTime()">
                    <div class="homeworkItem-top">
                        <p style="width: fit-content;">
                            <b>@homeworkItem.lesgroep.vak.naam</b> @(string.IsNullOrEmpty(homeworkItem.studiewijzerItem.onderwerp) ? "" : " - " + homeworkItem.studiewijzerItem.onderwerp)
                        </p>

                        @if (!string.IsNullOrEmpty(homeworkItem.studiewijzerItem.omschrijving))
                        {
                            @* <div class="homework-divider"></div> *@
                            <div class="homework-content">@Html.Raw(homeworkItem.studiewijzerItem.omschrijving)</div>
                        }

                        @if (homeworkItem.studiewijzerItem.bijlagen != null && !homeworkItem.studiewijzerItem.bijlagen.Count.Equals(0))
                        {
                            @* <div class="homework-divider"></div> *@
                            <div class="homework-bijlagen">
                                @foreach (var bijlage in homeworkItem.studiewijzerItem.bijlagen)
                                {
                                    <a href="@bijlage.assemblyResults[0].fileUrl" target="_blank" class="homework-bijlage">
                                        <span class="fa-solid fa-paperclip" style=" vertical-align: middle;"></span>
                                        <p>@bijlage.omschrijving</p>
                                    </a>
                                }
                            </div>
                        }

                    </div>
                    
                    @if (homeworkItem.studiewijzerItem.huiswerkType?.ToLower() == "eigen")
                    {
                        <div class="delete-icon" id="custom-homework-@homeworkItem.UUID" onclick="WantToDeleteHomework('@homeworkItem.UUID')">
                            <i class="fa-solid fa-trash"></i>
                        </div>
                        <div class="delete-icon" id="custom-homework-sure-@homeworkItem.UUID" onclick="WantToDeleteHomeworkSure('@homeworkItem.UUID')" style="display: none; color: var(--deny-color);">
                            <i class="fa-solid fa-trash"></i>
                        </div>
                    }
                </div>
            }
        </div>
        
        dayId++;
    }
</div>

@if (Model.items.Count == 0)
{
    <h1 style="position: relative; top: 50%; width: 100%; transform: translate(0, -50%); text-align: center; color: var(--text-color);">Geen huiswerk, nice!</h1>
}


<script>
    function WantToDeleteHomeworkSure(s) {
    
        fetch('/somtoday/huiswerk/nieuw?id=' + s, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        }).then(response => {
            if (response.ok) {
                
                if (document.getElementById("custom-homework-" + s).parentElement.parentElement.childElementCount === 2) {
                    document.getElementById("custom-homework-" + s).parentElement.parentElement.remove();
                }
                else
                {
                    document.getElementById("custom-homework-" + s).parentElement.remove();
                }
            }
        });
    }
    
    function WantToDeleteHomework(s) {
        document.getElementById("custom-homework-" + s).style.display = "none";
        document.getElementById("custom-homework-sure-" + s).style.display = "block";
        try
        {
            new Promise(res => setTimeout(res, 3000)).then(() => {
                document.getElementById("custom-homework-" + s).style.display = "block";
                document.getElementById("custom-homework-sure-" + s).style.display = "none";
            });  
        }
        catch{}
    }

    //   // Get all the div elements with class "homework-divider"
    // var dividers = document.querySelectorAll('.homework-divider');
    //
    // // Loop through each divider element
    // dividers.forEach(divider => {
    //     // Get the sibling p element
    //     const siblingParagraph = divider.previousElementSibling;
    //
    //     // Check if the sibling exists and is a p element
    //     if (siblingParagraph && siblingParagraph.tagName === 'P') {
    //         // Get the width of the sibling paragraph
    //         const width = siblingParagraph.offsetWidth;
    //
    //         // Set the width of the divider to match the width of the paragraph or the width of the parent element, whichever is smaller
    //         divider.style.width = `${Math.min(width, divider.parentElement.offsetWidth)}px`;
    //     }
    // });
    
    //append to .sidebar :  
    bottomRightAddButton = document.createElement("div");
    bottomRightAddButton.className = "bottom-right-add-button";
    bottomRightAddButton.id = "added-by-fetch";
    bottomRightAddButton.style.display = "none";
    bottomRightAddButton.innerHTML = '<a onclick="ReplacePage(\'/Somtoday/Huiswerk/Nieuw\')"><i class="fa-solid fa-plus center"></i></a>';
    
    document.querySelector(".bottom ul").appendChild(bottomRightAddButton);
    
    main.addEventListener("main:load", function () {  
        //if the url has the parameter "les" then scroll to that homework item's parent
        const searchParams = new URLSearchParams(window.location.search);
        const les = searchParams.get('les');
        if (les !== null) {
            //get the id of the homework item's parent
            const homeworkItem = document.getElementById(les);
            if (homeworkItem !== null) {
                //scroll to the homework item's parent
                doScrolling(homeworkItem.parentElement.id, 500);
            }
            else
            {
                //scroll to the next homework item
                doScrolling("next-homework", 500);
                addNotification("Huiswerk niet gevonden", "Er is geen huiswerk gevonden bij deze les, balen zeg ;)", "info");
            }
        }
        else
        {
            //scroll to the next homework item
            doScrolling("next-homework", 500);
        }
    });
        
    function getElementY(query) {
        return main.scrollTop + document.getElementById(query).getBoundingClientRect().top
    }

    function doScrolling(element, duration) {
        var startingY = main.scrollTop
        var elementY = getElementY(element)
        // If element is close to page's bottom then window will scroll only to some position above the element.
        var targetY = document.body.scrollHeight - elementY < main.innerHeight ? document.body.scrollHeight - main.innerHeight : elementY
        var diff = targetY - startingY

        // Easing function: easeInOutCubic
        // From: https://gist.github.com/gre/1650294
        var easing = function(t) {
            return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1
        }
        var start

        if (!diff) return
        
        diff -= 96;
        
        //add a percentage of diff to the duration
        duration += Math.abs(diff / 10);

        // Bootstrap our animation - it will get called right before next frame shall be rendered.
        window.requestAnimationFrame(function step(timestamp) {
            if (!start) start = timestamp
            // Elapsed miliseconds since start of scrolling.
            var time = timestamp - start
            // Get percent of completion in range [0, 1].
            var percent = Math.min(time / duration, 1)
            // Apply the easing.
            // It can cause bad-looking slow frames in browser performance tool, so be careful.
            percent = easing(percent)

            main.scrollTo(0, startingY + diff * percent)

            // Proceed with animation as long as we wanted it to.
            if (time < duration) {
                window.requestAnimationFrame(step)
            }
        })
    }
</script>
