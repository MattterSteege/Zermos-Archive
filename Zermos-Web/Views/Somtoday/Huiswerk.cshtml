@using System.Globalization
@model Zermos_Web.Models.somtodayHomeworkModel.SomtodayHomeworkModel

@{
    ViewBag.Title = "title";


    var groupedHomework = Model.items.GroupBy(item => item.datumTijd.Date);
    bool nextHomeworkFound = false;
    int dayId = 0; 
}

<link rel="stylesheet" href="~/css/somtoday.css" />

<div class="homework-container">
    @foreach (var dayGroup in groupedHomework)
    {
        //if date is after today and nextHomeworkFound is false
        string id = "";
        if (dayGroup.First().datumTijd.Date > DateTime.Now.Date.AddDays(DateTime.Now.Hour < 17 ? -1 : 0) && !nextHomeworkFound)
        {
            id = "next-homework";
            nextHomeworkFound = true;
        }
        
        <div class="homework-day-parent" id="@(id == "" ? dayId : id)">

            <h1>@(dayGroup.First()?.datumTijd.ToString("dddd dd MMMM", new CultureInfo("nl-NL")) ?? "Geen datum!?")</h1>

            @foreach (var homeworkItem in dayGroup)
            {
                <div class="homeworkItem @homeworkItem.studiewijzerItem.huiswerkType?.ToLower() @(homeworkItem.studiewijzerItem.bijlagen?.Count > 0 ? "bijlagen" : "") @(homeworkItem.huiswerkType)" time="@homeworkItem.datumTijd.ToUnixTime()" vak="@(homeworkItem.lesgroep?.vak.naam ?? "Onbekend")" bijlagen="@homeworkItem.studiewijzerItem.bijlagen?.Count" huiswerkType="@homeworkItem.studiewijzerItem.huiswerkType?.ToLower()">
                    <div class="homeworkItem-top">
                        <p style="width: fit-content;">
                            <b>@(homeworkItem.lesgroep?.vak.naam ?? "onbekend")</b> @(string.IsNullOrEmpty(homeworkItem.studiewijzerItem.onderwerp) ? "" : " - " + homeworkItem.studiewijzerItem.onderwerp)
                        </p>

                        @if (!string.IsNullOrEmpty(homeworkItem.studiewijzerItem.omschrijving))
                        {
                            @* <div class="homework-divider"></div> *@
                            <div class="homework-content">@Html.Raw(homeworkItem.studiewijzerItem.omschrijving)</div>
                        }

                        @if (homeworkItem.studiewijzerItem.bijlagen != null && !homeworkItem.studiewijzerItem.bijlagen.Count.Equals(0))
                        {
                            @* <div class="homework-divider"></div> *@
                            <div class="homework-bijlagen">
                                @foreach (var bijlage in homeworkItem.studiewijzerItem.bijlagen)
                                {
                                    @if (bijlage.assemblyResults[0].fileUrl.EndsWith(".pdf"))
                                    {
                                        <a href="@(bijlage.assemblyResults[0].fileUrl + "#toolbar=0&navpanes=0&scrollbar=0&statusbar=0&messages=0&scrollbar=0")" target="_blank" class="homework-bijlage">
                                            <span class="fa-solid fa-paperclip" style=" vertical-align: middle;"></span>
                                            <p>@bijlage.omschrijving</p>
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@bijlage.assemblyResults[0].fileUrl" target="_blank" class="homework-bijlage">
                                            <span class="fa-solid fa-paperclip" style=" vertical-align: middle;"></span>
                                            <p>@bijlage.omschrijving</p>
                                        </a>
                                    }
                                    
                                }
                            </div>
                        }

                    </div>
                    
                    @if (homeworkItem.studiewijzerItem.huiswerkType?.ToLower() == "eigen")
                    {
                        <div class="delete-icon" id="custom-homework-@homeworkItem.UUID" onclick="WantToDeleteHomework('@homeworkItem.UUID')">
                            <i class="fa-solid fa-trash"></i>
                        </div>
                        <div class="delete-icon" id="custom-homework-sure-@homeworkItem.UUID" onclick="WantToDeleteHomeworkSure('@homeworkItem.UUID')" style="display: none; color: var(--deny-color);">
                            <i class="fa-solid fa-trash"></i>
                        </div>
                    }
                </div>
            }
        </div>
        
        dayId++;
    }
</div>

@if (Model.items.Count == 0)
{
    <h1 style="position: relative; top: 50%; width: 100%; transform: translate(0, -50%); text-align: center; color: var(--text-color);">Geen huiswerk, nice!</h1>
}


<script>
    //make an array of all the homework items, title, content, bijlagen, date, 
    var allSubjects = ["@(Html.Raw(string.Join("\",\"", Model.items.Select(x => (x.lesgroep?.vak.naam) ?? "Onbekend").Distinct())))"];
    var allContent = ["@(Html.Raw(string.Join("\",\"", Model.items.Select(x => x.studiewijzerItem.huiswerkType.ToLower()).Distinct())))"];
    
    loadHomeworkSearch();

    //onload
    function loadHomeworkSearch() {            
        //if the homeworkSearch is already loaded, don't load it again
        if (document.getElementsByClassName('homework-search').length > 0)
            document.getElementsByClassName('homework-search')[0].remove();
            
        document.querySelector(".bottom ul").innerHTML += '<div class="homework-search" id="added-by-fetch" style="display: none;"><p class="search-text">Zoek op huiswerk</p><div class="OpenSearchButton" style="position: unset;"><i class="fa-solid fa-angle-down" id="openCloseArrow"></i></div><div style="display: none" class="grade-notification"></div></div>';
        document.querySelector(".bottom ul").innerHTML += '<div class="homework-search homework-search-button-popup" id="added-by-fetch" style="display: none;"></div>';
        document.getElementsByClassName('homework-search-button-popup')[0].innerHTML += '<div class="option" id="type_options"><div class="option-toggle selected" id="huiswerk_toggle" onclick="toggleHuiswerk()">Huiswerk</div><div class="option-toggle selected" id="toetsen_toggle" onclick="toggleToetsen()">Toetsen</div><div class="option-toggle selected" id="grote_toetsen_toggle" onclick="toggleGroteToetsen()">Grote Toetsen</div></div>';
        document.getElementsByClassName('homework-search-button-popup')[0].innerHTML += '<div class="option" id="subject_options"></div>';
        document.getElementsByClassName('homework-search-button-popup')[0].innerHTML += '<div class="option" id="toggle_everything" style="grid-column: span 2; padding-top: 21px; padding-bottom: 7px;"><div class="option-toggle selected" id="everything_toggle" onclick="toggleEverything()">Alles</div></div>';
        
        let startingHeight;
        let startingWidth;
        let endingWidth;
        
        var isOpen = false;
        
        document.getElementsByClassName('OpenSearchButton')[0].parentElement.onclick = function() {
            
            if (isOpen)
            {
                isOpen = false;
                closeSearchPopUp();
            }
            else
            {
                startingHeight = document.getElementsByClassName('homework-search')[0].offsetHeight;
                startingWidth = document.getElementsByClassName('homework-search')[0].offsetWidth;
                endingWidth = Math.min(startingWidth * 8, 420);
                isOpen = true;
                openSearchPopUp();
            }
        };
        
        function openSearchPopUp() {
            var searchPopup = document.getElementsByClassName('homework-search-button-popup')[0];
            searchPopup.style.display = 'block';
            
            var height = (document.getElementById("subject_options").children.length * 33) + ((document.getElementById("subject_options").children.length - 1) * 7) + 48 + 61;
            var secondHeight = (document.getElementById("type_options").children.length * 33) + ((document.getElementById("type_options").children.length - 1) * 7) + 48 + 61;
            
            searchPopup.style.height = (height > secondHeight ? height : secondHeight) + 'px';
            
            searchPopup.style.width = endingWidth + 'px';
            searchPopup.style.boxShadow = '0 0 15px rgba(0, 0, 0, 0.1)';
            
            var search = document.getElementsByClassName('homework-search')[0];
            search.style.width = endingWidth + 'px';
            
            //rotate openCloseArrow 180deg
            document.getElementById('openCloseArrow').style.transform = 'rotate(180deg)';
            
            if (window.innerWidth <= 1200)
            {
                searchPopup.style.right = 'calc(64px + var(--padding))';
                search.style.width = 'calc(48px + var(--padding) + 256px)';
            }
        }
        
        function closeSearchPopUp() {
            var searchPopup = document.getElementsByClassName('homework-search-button-popup')[0];
            searchPopup.style.display = 'block';
            searchPopup.style.height = startingHeight + 'px';
            searchPopup.style.width = startingWidth + 'px';
            searchPopup.style.boxShadow = 'none';
            
            var search = document.getElementsByClassName('homework-search')[0];
            search.style.width = startingWidth + 'px';
            
            //rotate openCloseArrow 180deg
            document.getElementById('openCloseArrow').style.transform = 'rotate(0deg)';
            
            searchPopup.style.right = '16px';
            search.style.right = '16px';
        }
    }
    
    function AddHomework() {
        new ZermosModal()
        .addTitle("Huiswerk toevoegen")
        .addDateInput("Wanneer moet het huiswerk af zijn?")
        .addInput("Welke titel krijgt het huiswerk?")
        .addMultilineInput("Wat is de beschrijving van het huiswerk?")
        .setSubmitButtonLabel("Huiswerk toevoegen")
        .onSubmit((date, titel, desc) => {
            date = date + "T00:00:00";
            
            fetch('/Somtoday/Huiswerk/Nieuw', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ "deadline": date, "titel": titel, "omschrijving": desc })
            }).then(response => {
                if (response.status === 200) {
                    ReplacePage('/Somtoday/Huiswerk');
                }
            }).catch(error => {
                console.error(error);
            });
        })
        .open();
    }

    function WantToDeleteHomeworkSure(s) {
    
        fetch('/somtoday/huiswerk/nieuw?id=' + s, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        }).then(response => {
            if (response.ok) {
                
                if (document.getElementById("custom-homework-" + s).parentElement.parentElement.childElementCount === 2) {
                    document.getElementById("custom-homework-" + s).parentElement.parentElement.remove();
                }
                else
                {
                    document.getElementById("custom-homework-" + s).parentElement.remove();
                }
            }
        });
    }
    
    function WantToDeleteHomework(s) {
        document.getElementById("custom-homework-" + s).style.display = "none";
        document.getElementById("custom-homework-sure-" + s).style.display = "block";
        try
        {
            new Promise(res => setTimeout(res, 3000)).then(() => {
                document.getElementById("custom-homework-" + s).style.display = "block";
                document.getElementById("custom-homework-sure-" + s).style.display = "none";
            });  
        }
        catch{}
    }

    bottomRightAddButton = document.createElement("div");
    bottomRightAddButton.className = "bottom-right-add-button";
    bottomRightAddButton.id = "added-by-fetch";
    bottomRightAddButton.style.display = "none";
    bottomRightAddButton.innerHTML = '<a onclick="AddHomework()"><i class="fa-solid fa-plus center"></i></a>';
    
    document.querySelector(".bottom ul").appendChild(bottomRightAddButton);
    
    main.addEventListener("main:load", function () {  
        //if the url has the parameter "les" then scroll to that homework item's parent
        const searchParams = new URLSearchParams(window.location.search);
        const les = searchParams.get('les');
        if (les !== null) {
            const homeworkItem = document.querySelector('[time="' + les + '"]');
            if (homeworkItem !== null) {
                //scroll to the homework item's parent
                doScrolling('[id="' + homeworkItem.parentElement.id + '"]', 500);
                //after 500ms add .blink to the homework item
                setTimeout(function () {
                    homeworkItem.classList.add("blink");
                }, 750);
            }
            else
            {
                addNotification("Huiswerk niet gevonden", "Er is geen huiswerk gevonden bij deze les, balen zeg ;)", "info");
            }
        }
        else
        {
            //scroll to the next homework item
            doScrolling('[id="next-homework"]', 500);
            setTimeout(function () {
                document.getElementById("next-homework").classList.add("blink");
            }, 750);
        }
    });
        
    function getElementY(query) {
        return main.scrollTop + document.querySelector(query).getBoundingClientRect().top
    }

    function doScrolling(element, duration) {
        var startingY = main.scrollTop
        var elementY = getElementY(element)
        // If element is close to page's bottom then window will scroll only to some position above the element.
        var targetY = document.body.scrollHeight - elementY < main.innerHeight ? document.body.scrollHeight - main.innerHeight : elementY
        var diff = targetY - startingY

        // Easing function: easeInOutCubic
        // From: https://gist.github.com/gre/1650294
        var easing = function(t) {
            return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1
        }
        var start

        if (!diff) return
        
        diff -= 96;
        
        //add a percentage of diff to the duration
        duration += Math.abs(diff / 10);

        // Bootstrap our animation - it will get called right before next frame shall be rendered.
        window.requestAnimationFrame(function step(timestamp) {
            if (!start) start = timestamp
            // Elapsed miliseconds since start of scrolling.
            var time = timestamp - start
            // Get percent of completion in range [0, 1].
            var percent = Math.min(time / duration, 1)
            // Apply the easing.
            // It can cause bad-looking slow frames in browser performance tool, so be careful.
            percent = easing(percent)

            main.scrollTo(0, startingY + diff * percent)

            // Proceed with animation as long as we wanted it to.
            if (time < duration) {
                window.requestAnimationFrame(step)
            }
        })
    }
    
    
    //========================================HOMEWORK SORTING========================================
    var vakkenCurrentlyShown = [...allSubjects];
    var typesCurrentlyShown = [...allContent];
    
    if (!allContent.includes("huiswerk"))
        document.getElementById("huiswerk_toggle").style.display = "none";
    if (!allContent.includes("toets"))
        document.getElementById("toetsen_toggle").style.display = "none";
    if (!allContent.includes("grote_toets"))
        document.getElementById("grote_toetsen_toggle").style.display = "none";
    
    function toggleHuiswerk() { SortHomework("huiswerk", ""); }
    function toggleToetsen() { SortHomework("toets", ""); }
    function toggleGroteToetsen() { SortHomework("grote_toets", ""); }
    function toggleEverything() { SortHomework("*", "*"); }
    
    vakkenCurrentlyShown.forEach(function (vak) {
        document.getElementById("subject_options").innerHTML += '<div class="option-toggle selected" id="' + vak.toLowerCase().replace(" ", "_") + '_toggle" onclick="SortHomework(\'\', \'' + vak + '\')">' + vak + '</div>';
    });    
    
    function SortHomework(typeToToggle, vakToToggle) {
        
        if (typeToToggle === "*" && vakToToggle === "*")
        {
            vakkenCurrentlyShown = [...allSubjects];
            typesCurrentlyShown = [...allContent];
            
            document.getElementById("huiswerk_toggle").classList.add("selected");
            document.getElementById("toetsen_toggle").classList.add("selected");
            document.getElementById("grote_toetsen_toggle").classList.add("selected");
            
            vakkenCurrentlyShown.forEach(function (vak) {
                document.getElementById(vak.toLowerCase().replace(" ", "_") + "_toggle").classList.add("selected");
            });
            
            document.getElementsByClassName("grade-notification")[0].style.display = "none";
        }

        if (typeToToggle !== "" && typeToToggle !== "*")
        {
            if (typeToToggle === "huiswerk")
            {
                if (typesCurrentlyShown.includes("huiswerk"))
                {
                    typesCurrentlyShown.splice(typesCurrentlyShown.indexOf("huiswerk"), 1);
                    document.getElementById("huiswerk_toggle").classList.remove("selected");
                }
                else
                {
                    typesCurrentlyShown.push("huiswerk");   
                    document.getElementById("huiswerk_toggle").classList.add("selected");
                }
                
            }
            else if (typeToToggle === "toets")
            {
                if (typesCurrentlyShown.includes("toets"))
                {
                    typesCurrentlyShown.splice(typesCurrentlyShown.indexOf("toets"), 1);
                    document.getElementById("toetsen_toggle").classList.remove("selected");
                }
                else
                {
                    typesCurrentlyShown.push("toets");   
                    document.getElementById("toetsen_toggle").classList.add("selected");
                }
            }
            else if (typeToToggle === "grote_toets")
            {
                if (typesCurrentlyShown.includes("grote_toets"))
                {
                    typesCurrentlyShown.splice(typesCurrentlyShown.indexOf("grote_toets"), 1);
                    document.getElementById("grote_toetsen_toggle").classList.remove("selected");
                }
                else
                {
                    typesCurrentlyShown.push("grote_toets");   
                    document.getElementById("grote_toetsen_toggle").classList.add("selected");
                }
            }
        }
        
        if (vakToToggle !== "" && vakToToggle !== "*")
        {
            if (vakkenCurrentlyShown.includes(vakToToggle))
            {
                vakkenCurrentlyShown.splice(vakkenCurrentlyShown.indexOf(vakToToggle), 1);
                document.getElementById(vakToToggle.toLowerCase().replace(" ", "_") + "_toggle").classList.remove("selected");
            }
            else
            {
                vakkenCurrentlyShown.push(vakToToggle);   
                document.getElementById(vakToToggle.toLowerCase().replace(" ", "_") + "_toggle").classList.add("selected");
            }
        }
        
        if (arraysEqual(vakkenCurrentlyShown, allSubjects) && arraysEqual(typesCurrentlyShown, allContent)) 
        {
            document.getElementsByClassName("grade-notification")[0].style.display = "none";
            document.getElementById("everything_toggle").classList.add("selected");
        }
        else
        {
            document.getElementsByClassName("grade-notification")[0].style.display = "flex";
            document.getElementById("everything_toggle").classList.remove("selected");
        }
        
        //get all the homework items
        var homeworkItems = document.getElementsByClassName("homeworkItem");
        
        //loop through all the homework items
        for (var i = 0; i < homeworkItems.length; i++) {
            //get the homework item
            var homeworkItem = homeworkItems[i];
            
            //get the vak and type of the homework item
            var vak = homeworkItem.getAttribute("vak");
            var type = homeworkItem.getAttribute("huiswerkType");
            
            //if the vak and/or the is not in the array of vakken and/or types, hide the homework item
            if (!vakkenCurrentlyShown.includes(vak) || !typesCurrentlyShown.includes(type))
                homeworkItem.style.display = "none";
            else
                homeworkItem.style.display = "flex";
        }
        
        //loop through all the homework days, and if there are no homework items in the day that are visible, hide the day
        var homeworkDays = document.getElementsByClassName("homework-day-parent");
        for (var i = 0; i < homeworkDays.length; i++) {
            var homeworkDay = homeworkDays[i];
            var homeworkItems = homeworkDay.getElementsByClassName("homeworkItem");
            
            var visibleHomeworkItems = 0;
            for (var j = 0; j < homeworkItems.length; j++) {
                if (homeworkItems[j].style.display === "flex") {
                    visibleHomeworkItems++;
                    break;
                }
            }
            
            if (visibleHomeworkItems === 0)
                homeworkDay.style.display = "none";
            else
                homeworkDay.style.display = "grid";
        }
    }
    
    function arraysEqual(a, b) {
        //check if arrays are equal, but they do not have to be in the same order
    
        if (a === b) return true;
        if (a == null || b == null) return false;
        if (a.length !== b.length) return false;
    
        a.sort();
        b.sort();
    
        for (var i = 0; i < a.length; ++i) {
            if (a[i] !== b[i]) return false;
        }
        return true;
    }
</script>
