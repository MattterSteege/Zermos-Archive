@using Zermos_Web.Utilities
@using Microsoft.AspNetCore.Http
@model List<IGrouping<Guid, Message>>

@{
    var wordCount = 150;
    Context.Response.Cookies.Append("last-seen-infowijs-news", DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"), new CookieOptions {Expires = DateTime.Now.AddDays(60)});

    var lastUpdated = Context.Request.Cookies["last-seen-infowijs-news"] == null ? DateTime.MinValue : DateTime.Parse(Context.Request.Cookies["last-seen-infowijs-news"]);

}

<link rel="stylesheet" href="/css/infowijs.css" preload/>

<div class="message-container">
    <div class="later">
        @foreach (var messageGroup in Model)
        { 
            <div class="message">
                @{
                    var title = messageGroup.FirstOrDefault(m => m.Type == 30);
                    var contents = messageGroup.Where(m => m.Type == 1);
                    var attachments = messageGroup.Where(m => m.Type == 2);
                    var photos = messageGroup.Where(m => m.Type == 3);
                }

                @if (title != null)
                {
                    <h2 class="title">@title.Content.ContentClass?.Title</h2>

                    @if (lastUpdated < title.CreatedAt.ToDateTime())
                    {
                        <div class="news-notification">
                            <div class="notif-dot"></div>
                        </div>
                    }
                }

                <div class="contents">

                    @foreach (var content in contents)
                    {
                        @if (content.Content.String.Split(new[] {' ', '\r', '\n'}, StringSplitOptions.RemoveEmptyEntries).Length < wordCount)
                        {
                            <pre class="content">@Html.Raw(HTMLUtils.ConvertLinksInText(content.Content.String))</pre>
                        }
                        else
                        {
                            var indexOfMessage = Model.IndexOf(messageGroup);
                            <pre id=@("base-" + indexOfMessage) class="content">@Html.Raw(HTMLUtils.BalanceHtmlTags(HTMLUtils.ConvertLinksInText(content.Content.String).FirstWords(wordCount)))</pre>
                            <span id=@("dots-" + indexOfMessage) style="font-size: var(--font-size);">...</span>
                            <pre id=@("more-" + indexOfMessage) style="display: none;">@Html.Raw(HTMLUtils.ConvertLinksInText(content.Content.String))</pre>
                            <button onclick=@("readMore(" + indexOfMessage + ")") id=@("myBtn-" + indexOfMessage) class="read-more-btn">Lees meer</button>
                        }
                    }
                </div>

                @{
                    IEnumerable<Message> messages3 = attachments as Message[] ?? attachments.ToArray();
                }
                <div class="attachments">
                    @foreach (var attachment in messages3)
                    {
                        <p onclick="window.open('@attachment.Content.ContentClass.Url');" class="attachment">@(attachment.Content.ContentClass.Name + System.IO.Path.GetExtension(attachment.Content.ContentClass.Url.AbsolutePath))</p>
                    }

                    @foreach (var photo in photos)
                    {
                        <img src="@photo.Content.String" alt="Foto" class="photo-attachment" onclick="window.open('@photo.Content.String');"/>
                    }
                </div>
            </div>
        }
    </div>
</div>


<script minimize>
@Context.Items["dmjs"]

    function readMore(id) {
        var base = document.getElementById("base-" + id);
        var dots = document.getElementById("dots-" + id);
        var moreText = document.getElementById("more-" + id);
        var btnText = document.getElementById("myBtn-" + id);
    
        if (dots.style.display === "none") {
            dots.style.display = "inline";
            btnText.innerHTML = "Lees meer";
            moreText.style.display = "none";
            base.style.display = "block";
        } else {
            dots.style.display = "none";
            btnText.innerHTML = "Lees minder";
            moreText.style.display = "inline";
            base.style.display = "none";
        }
    }
    
    Zermos.mainBeforeLoad = () =>{
        //reverse the order of the messages
        var messages = document.getElementsByClassName("message");
        for (var i = 0; i < messages.length; i++) {
            messages[i].parentNode.insertBefore(messages[i], messages[i].parentNode.firstChild);
        }
    }
</script>