@using Zermos_Web.Utilities
@using Microsoft.AspNetCore.Http
@model List<IGrouping<Guid, Message>>

@{
    ViewBag.Title = "title";
    int wordCount = 150;
    Context.Response.Cookies.Append("last-seen-infowijs-news", DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"), new CookieOptions {Expires = DateTime.Now.AddDays(60)});

    DateTime lastUpdated = Context.Request.Cookies["last-seen-infowijs-news"] == null ? DateTime.MinValue : DateTime.Parse(Context.Request.Cookies["last-seen-infowijs-news"]);

}

<div class="message-container">

    <div class="top-2">
        <div class="message">
            @{
                var message = Model[0];
                var title = message.FirstOrDefault(m => m.Type == 30);
                var contents = message.Where(m => m.Type == 1);
                var attachments = message.Where(m => m.Type == 2);
            }
            

            @if (title != null)
            {
                <h2 class="title">@title.Content.ContentClass?.Title</h2>
                                                                   
                @if (lastUpdated < title.CreatedAt.ToDateTime())
                {
                    <div class="news-notification">
                        <div class="notif-dot"></div>
                    </div>
                }
            }

            <div class="contents">
                @foreach (var content in contents)
                {
@* <pre class="content">@Html.Raw(HTMLUtils.ConvertLinksInText(content.Content.String))</pre> *@
                    @if (content.Content.String.Split(new char[] {' ', '\r', '\n'}, StringSplitOptions.RemoveEmptyEntries).Length < wordCount)
                    {
                        <p class="content">@Html.Raw(HTMLUtils.ConvertLinksInText(content.Content.String))</p>
                    }
                    else
                    {
                        <p id=@("base-" + "0") class="content">@Html.Raw(HTMLUtils.BalanceHtmlTags(HTMLUtils.ConvertLinksInText(content.Content.String).FirstWords(wordCount)))</p>
                        <span id=@("dots-" + "0")>...</span>
                        <pre id=@("more-" + "0") style="display: none;">@Html.Raw(HTMLUtils.ConvertLinksInText(content.Content.String))</pre>
                        <button onclick=@("readMore(" + "0" + ")") id=@("myBtn-" + "0") class="read-more-btn">Lees meer</button>
                    }
                }
            </div>

            @{
                IEnumerable<Message> messages1 = attachments as Message[] ?? attachments.ToArray();
            }
            <div class="attachments" style="padding: @(messages1.Any() ? "16px" : "0");">
                @foreach (var attachment in messages1)
                {
                    <div class="attachments">
                        <p onclick="window.open('@attachment.Content.ContentClass.Url');" class="attachment">@(attachment.Content.ContentClass.Name + System.IO.Path.GetExtension(attachment.Content.ContentClass.Url.AbsolutePath))</p>
                    </div>
                }
            </div>
        </div>
        <div class="message">
            @{
                message = Model[1];
                title = message.FirstOrDefault(m => m.Type == 30);
                contents = message.Where(m => m.Type == 1);
                attachments = message.Where(m => m.Type == 2);
            }

            @if (title != null)
            {
                <h2 class="title">@title.Content.ContentClass?.Title</h2>
                                                                   
                @if (lastUpdated < title.CreatedAt.ToDateTime())
                {
                    <div class="news-notification">
                        <div class="notif-dot"></div>
                    </div>
                }
            }

            <div class="contents">

                @foreach (var content in contents)
                {
                    @if (content.Content.String.Split(new char[] {' ', '\r', '\n'}, StringSplitOptions.RemoveEmptyEntries).Length < wordCount)
                    {
                        <p class="content">@Html.Raw(HTMLUtils.ConvertLinksInText(content.Content.String))</p>
                    }
                    else
                    {
                        <p id=@("base-" + "1") class="content">@Html.Raw(HTMLUtils.BalanceHtmlTags(HTMLUtils.ConvertLinksInText(content.Content.String).FirstWords(wordCount)))</p>
                        <span id=@("dots-" + "1")>...</span>
                        <pre id=@("more-" + "1") style="display: none;">@Html.Raw(HTMLUtils.ConvertLinksInText(content.Content.String))</pre>
                        <button onclick=@("readMore(" + "1" + ")") id=@("myBtn-" + "1") class="read-more-btn">Lees meer</button>
                    }
                }
            </div>


            @{
                IEnumerable<Message> messages2 = attachments as Message[] ?? attachments.ToArray();
            }
            <div class="attachments" style="padding: @(messages2.Any() ? "16px" : "0");">
                @foreach (var attachment in messages2)
                {
                    <div class="attachment" target="_blank">
                        <p onclick="window.open('@attachment.Content.ContentClass.Url');" class="attachment">@(attachment.Content.ContentClass.Name + System.IO.Path.GetExtension(attachment.Content.ContentClass.Url.AbsolutePath))</p>
                    </div>
                }
            </div>
        </div>
    </div>


    <div class="later">
        @foreach (var messageGroup in Model.Skip(2))
        {
            <div class="message">
                @{
                    title = messageGroup.FirstOrDefault(m => m.Type == 30);
                    contents = messageGroup.Where(m => m.Type == 1);
                    attachments = messageGroup.Where(m => m.Type == 2);
                }

                @if (title != null)
                {
                    <h2 class="title">@title.Content.ContentClass?.Title</h2>
                                                                       
                    @if (lastUpdated < title.CreatedAt.ToDateTime())
                    {
                        <div class="news-notification">
                            <div class="notif-dot"></div>
                        </div>
                    }
                }

                <div class="contents">

                    @foreach (var content in contents)
                    {
                        @if (content.Content.String.Split(new char[] {' ', '\r', '\n'}, StringSplitOptions.RemoveEmptyEntries).Length < wordCount)
                        {
                            <p class="content">@Html.Raw(HTMLUtils.ConvertLinksInText(content.Content.String))</p>
                        }
                        else
                        {
                            int indexOfMessage = Model.IndexOf(messageGroup);
                            <p id=@("base-" + indexOfMessage) class="content">@Html.Raw(HTMLUtils.BalanceHtmlTags(HTMLUtils.ConvertLinksInText(content.Content.String).FirstWords(wordCount)))</p>
                            <span id=@("dots-" + indexOfMessage)>...</span>
                            <pre id=@("more-" + indexOfMessage) style="display: none;">@Html.Raw(HTMLUtils.ConvertLinksInText(content.Content.String))</pre>
                            <button onclick=@("readMore(" + indexOfMessage + ")") id=@("myBtn-" + indexOfMessage) class="read-more-btn">Lees meer</button>
                        }
                    }
                </div>

            @{
                IEnumerable<Message> messages3 = attachments as Message[] ?? attachments.ToArray();
            }
            <div class="attachments" style="padding: @(messages3.Any() ? "16px" : "0");">
                    @foreach (var attachment in messages3)
                    {
                        <div class="attachments">
                            <p onclick="window.open('@attachment.Content.ContentClass.Url');" class="attachment">@(attachment.Content.ContentClass.Name + System.IO.Path.GetExtension(attachment.Content.ContentClass.Url.AbsolutePath))</p>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

<script>
function readMore(id) {
    var base = document.getElementById("base-" + id);
    var dots = document.getElementById("dots-" + id);
    var moreText = document.getElementById("more-" + id);
    var btnText = document.getElementById("myBtn-" + id);

    if (dots.style.display === "none") {
        dots.style.display = "inline";
        btnText.innerHTML = "Lees meer";
        moreText.style.display = "none";
        base.style.display = "block";
    } else {
        dots.style.display = "none";
        btnText.innerHTML = "Lees minder";
        moreText.style.display = "inline";
        base.style.display = "none";
    }
}
</script>