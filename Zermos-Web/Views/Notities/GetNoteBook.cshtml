@using Zermos_Web.Models.Zermos
@model Zermos_Web.Models.Zermos.NotitieBoek

@{
    ViewBag.Title = "title";
}

@{
    ViewBag.Title = "title";
    Model.Notities = Model.Notities.OrderBy(x => x.Titel).ToList();
}

<link rel="stylesheet" href="/css/notities.css">
<script src="https://unpkg.com/docx@7.1.0/build/index.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.js"></script>
<script defer src="/js/note-export.js"></script>

<div class="actions-row" style="height: 0; margin-bottom: 0;">
    <div id="change-name" onclick="UpdateName(document.querySelector('.selected').getAttribute('note-id'))">
        <i class="fa-solid fa-edit"></i>
        Naam wijzigen
    </div>
    <div id="delete" onclick="deleteNotebook(document.querySelector('.selected').getAttribute('note-id'))">
        <i class="fa-solid fa-trash"></i>
        Verwijderen
    </div>
    <div onclick="exportToDocx(document.querySelector('.selected').getAttribute('note-id'))">
        <i class="fa-solid fa-file-export"></i>
        Exporteren
    </div>
</div>

<table class="table">
    <tr class="table-header">
        <th scope="col" style="width: 0;"></th>
        <th scope="col" style="width: 0;"><i class="fa-solid fa-file"></i></th>
        <th scope="col">notitie naam</th>
        <th scope="col">omschrijving</th>
        <th scope="col">paragrafen</th>
        <th scope="col">Laatst aangepast</th>
        <th scope="col">Tags</th>
    </tr>

    @foreach (Notitie notitie in Model.Notities)
    {
        string url = Context.Request.Path + "/" + notitie.Id;
        
        <tr class="table-row" note-id="@notitie.Id">
            <td><i class="fa-regular fa-circle"></i></td>
            <td><i class="fa-solid fa-file"></i></td>
            <td onclick="ReplacePage('@url')">@notitie.Titel</td>
            <td>@notitie.Omschrijving</td>
            <td>@notitie.Paragraphs.Count</td>
            <td>@notitie.lastEdit.ToString("dd/MM/yyyy")</td>
            <td>
                @foreach(string tag in notitie.Tags)
                {
                    <span class="tag">@tag</span>
                }
            </td>
        </tr>
        
    }
</table>

<script>
var selectable = document.getElementsByClassName('fa-circle');

for (var i = 0; i < selectable.length; i++) {
    selectable[i].onclick = function() {
        if (this.classList.contains('fa-circle')) {
            document.querySelectorAll('.fa-check-circle').forEach(element => {
                element.classList.remove('fa-check-circle');
                element.classList.add('fa-circle');
                element.parentElement.parentElement.classList.remove('selected');
            });

            this.classList.remove('fa-circle');
            this.classList.add('fa-check-circle');
            this.parentElement.parentElement.classList.add('selected');

            document.querySelector('.actions-row').style.height = "";
            document.querySelector('.actions-row').style.marginBottom = "";
        } else {
            this.classList.remove('fa-check-circle');
            this.classList.add('fa-circle');
            this.parentElement.parentElement.classList.remove('selected');
            document.querySelector('.actions-row').style.height = "0";
            document.querySelector('.actions-row').style.marginBottom = "0";
        }
    };
}

function deleteNotebook(uuid) {
    fetch('/Notities/' + uuid, {
        method: 'DELETE'
    }).then(response => {
        if (response.status === 200) {
            ReplacePage('/Notities');
        }
    }).catch(error => {
        console.error(error);
    });
}

function UpdateName(uuid) {
    new ZermosModal()
    .setTitle("Modal Title")
    .addInput("Wat wil je dat de nieuwe naam wordt?")
    .setSubmitButtonLabel("Naam wijzigen")
    .onSubmit((name) => {
        fetch('/Notities/' + uuid, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({Naam: name})
            }).then(response => {
                if (response.status === 200) {
                    ReplacePage('/Notities');
                }
            }).catch(error => {
                console.error(error);
            });
    })
    .open();
}

function exportToDocx(uuid) {
    console.log(uuid, '@Context.Request.Path/' + uuid + '/export');
    //get JSON
    fetch('@Context.Request.Path/' + uuid + '/export', {
        method: 'GET'
    }).then(response => {
        if (response.status === 200) {
            response.json().then(json => {
                generate(json);
            });
        }
    }).catch(error => {
        console.error(error);
    });
}
    
document.querySelector(".bottom ul").innerHTML +=
'<div class="bottom-right-add-button" id="added-by-fetch" style="display: none; z-index: 100">' +
    '<a style="position: unset;">' +
        '<i class="fa-solid fa-plus" id="ToggleButton"></i>' +
    '</a>'+
'</div>';

document.querySelector('#ToggleButton').parentElement.onclick = function() {
     new ZermosModal()
    .addTitle("Nieuwe notitie")
    .addInput("Wat wil je dat de nieuwe naam wordt?")
    .addInput("Wat is de omschrijving?")
    .addInput("Wat zijn de tags?")
    .setSubmitButtonLabel("Naam wijzigen")
    .onSubmit((titel, desc, tags) => {  
        //POST /Notities/uuid BODY: {"Titel": "Sample Notitie", "Omschrijving": "This is a sample notitie.", "Tags": ["tag1", "tag2", "tag3"] }
        fetch('@Context.Request.Path', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                "Titel": titel,
                "Omschrijving": desc,
                "Tags": tags.split(" ")
            })
        }).then(response => {
            if (response.status === 200) {
                ReplacePage('@Context.Request.Path');
            }
        }).catch(error => {
            console.error(error);
        });  
    })
    .open();
};
</script>