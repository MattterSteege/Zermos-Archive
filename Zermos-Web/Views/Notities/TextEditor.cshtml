@model Zermos_Web.Models.Zermos.Paragraph

@{
    ViewBag.Title = "GetParagraph";
}

<link rel="stylesheet" href="/css/Zermos-Notes/notities.css">
<script src="/js/Zermos-Notes/trix.js"></script>

<trix-editor class="trix-content"></trix-editor>

<script>
    document.addEventListener("trix-initialize", function (event) {
        const file_tools = document.querySelector(".trix-button-group--file-tools");
        file_tools.remove();
        load();
    });

    document.addEventListener('trix-file-accept', function (event) {
        event.preventDefault();
        alert('Bestanden uploaden werkt niet!');
    });

    //ctrl + s
    document.addEventListener("keydown", function(e) {
        if (e.key === 's' && (navigator.platform.match("Mac") ? e.metaKey : e.ctrlKey)) {
            e.preventDefault();
            save();
        }
    }, false);
    
    var lastSave = JSON.stringify(document.querySelector("trix-editor").editor)
    var interval = setInterval(function () {
        if (lastSave !== JSON.stringify(document.querySelector("trix-editor").editor)) {
            save();
            lastSave = JSON.stringify(document.querySelector("trix-editor").editor);
        }
    }, 10000);

    main.addEventListener("main:unload", function () {
        clearInterval(interval);
    });
    
    function save() {
        //create a ratelimit of 3 saves per 10 seconds
        var lastSave = localStorage.getItem("lastSave");
        if (lastSave != null) {
            var lastSaveDate = new Date(lastSave);
            var currentDate = new Date();
            var diff = currentDate - lastSaveDate;
            if (diff < 3333) {
                return;
                console.log("soft ratelimit triggered");
            }
        }
        
        var xhr = new XMLHttpRequest();
        xhr.open("PUT", "@Context.Request.Path", true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(JSON.stringify({ "Inhoud": JSON.stringify(document.querySelector("trix-editor").editor) }));
        xhr.onload = function () {
            if (xhr.status === 200) {
                console.log("[ Zermos ] Saved");
                document.querySelector("trix-editor").classList.add("saved");
                localStorage.setItem("lastSave", new Date());
                //after 1 second remove the saved class
                setTimeout(function () {
                    document.querySelector("trix-editor").classList.remove("saved");
                }, 1250);
            }
        };  
    }
    
    function load() {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", "@(Context.Request.Path).json", true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send();
        xhr.onload = function () {
            if (xhr.status === 200) {
                var data = JSON.parse(xhr.responseText);
                document.querySelector("trix-editor").editor.loadJSON(JSON.parse(data));
            }
        };  
    }

    function enterFullscreen() {
        //fullscreen is on toggle it off
        if (document.fullscreenElement) {
            document.exitFullscreen();
        }
    
        //fullscreen is off toggle it on
        else {
            document.querySelector(".full-screen").requestFullscreen({
                navigationUI: "hide"
            });
        }
    }
</script>