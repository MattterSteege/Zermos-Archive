@using Zermos_Web.Utilities
@model Zermos_Web.Models.Zermos.Notitie

@{
    Layout = null;
}
<link rel="stylesheet" href="/css/notities.css">
<script src="https://raw.githack.com/SortableJS/Sortable/master/Sortable.js"></script>

<div class="notitie-card-editor-container">
    <input id="nameInput" class="notitie-card title" onBlur="changeName()" value="@Model.Titel"/>
    <div class="notitie-card-editor-content-container">
        @foreach(var paragraph in Model.Paragraphs.OrderBy(x => x.ranking).ToList())
        {
            <div class="notitie-card content" id="@paragraph.Id">
                <div class="top">
                    <div class="title">@paragraph.Naam</div>
                    <i onclick="ReplacePage('@Context.Request.Path/@paragraph.Id')" class="fa-solid fa-edit fa-fw"></i>
                    <i onclick="RemoveContent('@paragraph.Id')" class="fa-solid fa-trash fa-fw"></i>
                    <i class="fa-solid fa-grip-lines fa-fw"></i>
                </div>
                <div class="content-preview">@paragraph.Inhoud.FirstChars(600, true)</div>
            </div>
        }
    </div>
</div>

<script>    
    function RemoveContent(id) {
        //remove paragraph
        var xhr = new XMLHttpRequest();
        xhr.open("DELETE", "@Context.Request.Path" + "/" + id, true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send();
        
        //remove from dom
        var element = document.getElementById(id);
        element.parentNode.removeChild(element);
    }
    
    var currentName = "@Model.Titel";
    function changeName() {
        if (currentName === document.getElementById("nameInput").value) {
            return;
        }
        var name = document.getElementById("nameInput").value;
        var xhr = new XMLHttpRequest();
        xhr.open("PUT", "@Context.Request.Path", true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(JSON.stringify({ "Titel": name }));
        xhr.onload = function () {
            if (xhr.status === 200) {
                currentName = name;
            }
        };
    }

   //dragging    
   //wait for Sortable to load
   document.querySelector('script[src="https://raw.githack.com/SortableJS/Sortable/master/Sortable.js"]')
   .onload = function () {
        console.log("[ Zermos ] Sortable loaded");
         Sortable.create(document.querySelector('.notitie-card-editor-content-container'), {
              handle: '.fa-grip-lines', // handle's class
              animation: 100,
              onUpdate: function (evt) {
                //update ranking
                var xhr = new XMLHttpRequest();
                xhr.open("PUT", "@Context.Request.Path" + "/" + evt.item.id, true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.send(JSON.stringify({ "Ranking": evt.newIndex + 1 }));
              }
         });
     }
     
     addButtonToPage("fa-plus", () => {
        new ZermosModal()
        .setTitle("Nieuw samenvattings onderdeel")
        .addText("Kies een van de mogelijklheden om een nieuw onderdeel toe te voegen")
        .addInput("Naam")
        .addSelectInput("Type", ["Tekst", "Mindmap"])
        .setSubmitButtonLabel("Toevoegen")
        .onSubmit((naam, type) => {
            if (type === "Tekst") {
                //add an extra paragraph
                var xhr = new XMLHttpRequest();
                xhr.open("POST", "@Context.Request.Path", true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.send(JSON.stringify({ "Naam": naam, "Inhoud": "" }));
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        ReplacePage('@Context.Request.Path');
                    }
                };
            } 
            else if (type === "Mindmap") {
                console.log("Mindmap");
            }                 
        })
        .open();
     })
</script>