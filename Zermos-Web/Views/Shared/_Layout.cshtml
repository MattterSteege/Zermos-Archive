@using Zermos_Web.Utilities
@{
    var currentPage = $"/{ViewContext.RouteData.Values["controller"]}/{ViewContext.RouteData.Values["action"]?.ToString()?.Split("/")[0] ?? "index"}";
    var version = Environment.GetEnvironmentVariable("ZERMOS-WEB-VERSION") ?? TokenUtils.RandomString(10);
}
<!DOCTYPE html>
<html lang="nl" class="@(Context.Request.Cookies["theme"] ?? "light") @(Context.Request.Cookies["hand_side"] ?? "right")">
<head>
    <meta charset="UTF-8">
    <title>Zermos</title>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet"/>
    <script src="https://kit.fontawesome.com/052f5fa8f8.js" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="/manifest.webmanifest"/>
    @* <meta name="theme-color" content="#f8f9fa"> *@
    <meta name="theme-color" content="@(Context.Request.Cookies["theme"] == "light" || Context.Request.Cookies["theme"] == "blue" ? "#f8f9fa" : Context.Request.Cookies["theme"] == "dark" || Context.Request.Cookies["theme"] == "red" ? "#1a1a1a" : Context.Request.Cookies["theme"] == "pink" ? "#ffebf2" : "#f8f9fa")">
    <link rel="stylesheet" href="~/css/style.css?v=@version">
    @if (ViewContext.View.Path != "/Views/Shared/_Loading.cshtml")
    {
        <script src="~/js/global.js?v=@version"></script>
    }
    @if (!string.IsNullOrEmpty(ViewData["add_css"]?.ToString()))
    {
        <link rel="stylesheet" href="~/css/@(ViewData["add_css"]).css?v=@version">
    }
</head>
<body onload="ReplacePage('@ViewData["url"]');">
<div class="sidebar">
    <div class="top">
        <!--        6 SVG's with the letters Z,E,R,M,O & S width should be 1/6 of 100%-->
        <svg viewBox="0 0 700 200">
            <text class="svgText" x="100" y="100">Z</text>
            <text class="svgText" x="200" y="100">E</text>
            <text class="svgText" x="300" y="100">R</text>
            <text class="svgText" x="400" y="100">M</text>
            <text class="svgText" x="500" y="100">O</text>
            <text class="svgText" x="600" y="100">S</text>
        </svg>
    </div>

    <div class="divider"></div>

    <div class="bottom">
        <ul>
            <li>
                <a onclick="ReplacePage('/Hoofdmenu')">
                    <div class="menu-item">
                        <i class="fa-solid fa-house menu-icons fa-fw"></i>
                        <p>Hoofdmenu</p>
                    </div>
                </a>
            </li>

            <h5 class="Heading">Zermelo</h5>

            <li>
                <a onclick="ReplacePage('@Url.Action("Rooster", "Zermelo")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-calendar-day menu-icons fa-fw"></i>
                        <p>Rooster</p>
                    </div>
                </a>
            </li>


            <h5 class="Heading">SOMtoday</h5>

            <li>
                <a onclick="ReplacePage('@Url.Action("Huiswerk", "Somtoday")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-pen-to-square menu-icons fa-fw"></i>
                        <p>Huiswerk</p>
                    </div>
                </a>
            </li>

            <li>
                <a onclick="ReplacePage('@Url.Action("Cijfers", "Somtoday")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-line-chart menu-icons fa-fw"></i>
                        <p>Cijfers</p>
                    </div>
                </a>
            </li>


            <h5 class="Heading">School</h5>

            <li>
                <a onclick="ReplacePage('@Url.Action("informatiebord", "School")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-info-circle menu-icons fa-fw"></i>
                        <p>Informatiebord</p>
                    </div>
                </a>
            </li>


            <h5 class="Heading">De Antonius app</h5>

            <li>
                <a onclick="ReplacePage('@Url.Action("SchoolNieuws", "Infowijs")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-newspaper menu-icons fa-fw"></i>
                        <p>School nieuws</p>
                    </div>
                </a>
            </li>

            <li>
                <a onclick="ReplacePage('@Url.Action("SchoolKalender", "Infowijs")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-calendar-days menu-icons fa-fw"></i>
                        <p>School kalender</p>
                    </div>
                </a>
            </li>

            <li style="display: none" class="hidden-account">
                <a onclick="ReplacePage('@Url.Action("Account", "Account")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-user menu-icons fa-fw"></i>
                    </div>
                </a>
            </li>

            <div class="spacer"></div>
        </ul>
    </div>
    <div class="docs">
        <img class="docs-image background-tint"/>
        <h4>Hulp nodig?</h4>
        <p>Check hoe je Zermos kunt gebruiken</p>
        <a href="https://zermos-docs.kronk.tech">Bekijk de documentatie</a>
    </div>
</div>

<div class="top-bar">
    <div class="top-right-profile-picture">
        <a onclick="ReplacePage('@Url.Action("Account", "Account")')">
            <i class="fa-solid fa-user menu-icons fa-fw"></i>
        </a>
    </div>

    <div class="backbutton" onclick="window.history.back()">
        <i class="fa-solid fa-angle-left"></i>
    </div>

    <div class="forewardbutton" onclick="window.history.forward()">
        <i class="fa-solid fa-angle-right"></i>
    </div>
</div>

<div id="content">
    <div class="loader-text">
        De pagina wordt geladen
    </div>
    <div class="loading-dots-container">
        <div class="loading-dots"></div>
        <div class="loading-dots"></div>
        <div class="loading-dots"></div>
    </div>
</div>
<main class="main" id="main">
    @RenderBody()
</main>

@{
    //if body isn't _Loading.cshtml show notifs
    if (ViewContext.View.Path != "/Views/Shared/_Loading.cshtml")
    {
        <div class="notifications">
            @foreach (var notification in Context.GetNotifications())
            {
                <div class="notification @notification.Type">
                    <h1>@notification.Type - @notification.Title</h1>
                    <p>@Html.Raw(notification.Body)</p>
                </div>
            }
        </div>

    }
}
<script id="vital-script">
    console.log('[ Zermos ] Zermos framework is ge√Ønitialiseerd');
    console.log('[ Zermos ] Je gebruikt Zermos versie @Environment.GetEnvironmentVariable("ZERMOS-WEB-VERSION")');

    var main = document.getElementById("main");
    var content = document.getElementById("content");

    function ReplacePage(url, fromHistory = false) {
        document.body.removeAttribute("onload");
        
        //check if the url is the same as the current url
        if (url === window.location.pathname) {
            return;
        }
        
        main.dispatchEvent(new Event("main:unload"));    
        
        // Define a function to append a script to either the head or body
        function appendScript(element, scriptToWorkWith, isSrc) {
            const script = document.createElement("script");
            if (isSrc) {
                script.src = scriptToWorkWith.src;
                script.integrity = scriptToWorkWith.integrity;
                script.crossOrigin = scriptToWorkWith.crossOrigin;
                script.referrerPolicy = scriptToWorkWith.referrerPolicy;
            } else {
                script.innerHTML = scriptToWorkWith.innerHTML;
            }

            if (scriptToWorkWith.defer) {
                script.defer = true;
            }
            
            script.id = "added-by-fetch";
            element.appendChild(script);
        }

        // Define a function to append a stylesheet link to the head
        function appendStylesheet(href) {
            const link = document.createElement("link");
            link.rel = "stylesheet";
            link.href = href + '?v=@version';
            link.id = "added-by-fetch";
            document.head.appendChild(link);
            return link;
        }
        
        document.getElementsByClassName("loader-text")[0].innerHTML = loadingTexts[Math.floor(Math.random() * loadingTexts.length)];

        //set loading-text to one of the following
        
        content.style.opacity = "1";
        // Make an AJAX request
        $.ajax({
            url: url,
            success: function(data, textStatus, xhr){
                
                if (xhr.status === 299) {
                    window.location.href = data;
                    return;
                }
                
                setTimeout(async function() {
                    let i  ;
                    //remove all items with id added-by-fetch
                    const elements = document.querySelectorAll("#added-by-fetch");
                    for (i= 0; i < elements.length; i++) {
                        elements[i].remove();
                    }
                    
                    // Update main content
                    main.outerHTML = '<main class="main" id="main"></main>';
                    main = document.getElementById("main");
                    main.innerHTML = stripTag("link", stripTag("script", data));

                    let html = document.createElement("html");
                    html.innerHTML = data;
                    
                    const scripts = html.getElementsByTagName("script");

                    for (i= 0; i < scripts.length; i++) {
                        if (scripts[i].src) {
                            appendScript(document.head, scripts[i], true);
                        } else {
                            appendScript(document.body, scripts[i], false);
                        }
                    }

                    const links = html.getElementsByTagName("link");
                    var amountOfStylesheets = links.length;
                    for (i= 0; i < links.length; i++) {
                        if (links[i].rel === "stylesheet") {
                            var link = appendStylesheet(links[i].href);
                            watchForLoading(link);
                        }
                    }
                    
                    function watchForLoading(link) {

                        var interval = setInterval(function() {
                            try {
                                if (link.sheet != null && link.sheet.cssRules.length > 0) {
                                    //if it is, the stylesheet is loaded
                                    clearInterval(interval);
                                    amountOfStylesheets--;
                                }
                            } catch (e) { }
                        }, 50); 
                    }
                        
                    while (amountOfStylesheets > 0) {
                        await new Promise(res => setTimeout(res, 50));
                    }
                    
                    html.remove();
                    
                    if (!fromHistory) {
                        window.location.hash = url;
                        //set cookie 'this_session_last_page' to the current page, only session
                        document.cookie = "this_session_last_page=" + url + "; path=/";
                    }
                    
                    main.dispatchEvent(new Event("main:load"));    
                    
                    content.style.opacity = "0";
                }, 250);
            },
            error: function(xhr, status, error) {
                //prevent error logging

                //console.log(xhr, status, error);
                
                //if it is a 401, repolace /login
                if (xhr.status === 401) {
                    ReplacePage("/Login");
                }
                else
                {
                    document.getElementsByClassName("loader-text")[0].innerHTML = "De pagina kon niet opgevraagd worden, waarschijnlijk is Zermos even offline";
                }
            },
            cache: false,
            type: 'GET'
        });


        function stripTag(tag, data) {
            const div = document.createElement('div');
            div.innerHTML = data;
            const scripts = div.getElementsByTagName(tag);
            let i = scripts.length;
            while (i--) {
                scripts[i].parentNode.removeChild(scripts[i]);
            }
            return div.innerHTML;
        }
    }
    
    //on popstate, replace the page with what's after the hash
    window.addEventListener('popstate', function(e) {
        //if the hash is empty, don't replace the page
        if (window.location.hash === "") {
            return;
        }
        ReplacePage(window.location.hash.replace("#", ""), true);
    });
   
</script>
@await RenderSectionAsync("Scripts", false)
</body>
</html>
