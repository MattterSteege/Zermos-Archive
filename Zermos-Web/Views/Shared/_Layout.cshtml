@using Microsoft.AspNetCore.Http
@using Zermos_Web.Utilities
@{
    var currentPage = $"/{ViewContext.RouteData.Values["controller"]}/{ViewContext.RouteData.Values["action"]?.ToString()?.Split("/")[0] ?? "index"}";
    var version = Environment.GetEnvironmentVariable("ZERMOS-WEB-VERSION") ?? "dev";
}
<!DOCTYPE html>
<html lang="nl" class="@(Context.Request.Cookies["theme"] ?? "light")">
<head>
    <meta charset="UTF-8">
    <title>Zermos</title>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet"/>
    <script src="https://kit.fontawesome.com/052f5fa8f8.js" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="/manifest.webmanifest"/>
    @* <meta name="theme-color" content="#f8f9fa"> *@
    <meta name="theme-color" content="@(Context.Request.Cookies["theme"] == "light" || Context.Request.Cookies["theme"] == "blue" ? "#f8f9fa" : Context.Request.Cookies["theme"] == "dark" || Context.Request.Cookies["theme"] == "red" ? "#1a1a1a" : Context.Request.Cookies["theme"] == "pink" ? "#ffebf2" : "#f8f9fa")">
    <link rel="stylesheet" href="~/css/style.css?v=@version">

    @if (ViewContext.View.Path != "/Views/Shared/_Loading.cshtml")
    {
        <script src="~/js/global.js?v=@version"></script>

    }
    @if (!string.IsNullOrEmpty(ViewData["add_css"]?.ToString()))
    {
        <link rel="stylesheet" href="~/css/@(ViewData["add_css"]).css?v=@version">
    }
</head>
<body onload="ReplacePage('@ViewData["url"]')">
<div class="sidebar">
    <div class="top">
        <!--        6 SVG's with the letters Z,E,R,M,O & S width should be 1/6 of 100%-->
        <svg viewBox="0 0 700 200">
            <text class="svgText" x="100" y="100">Z</text>
            <text class="svgText" x="200" y="100">E</text>
            <text class="svgText" x="300" y="100">R</text>
            <text class="svgText" x="400" y="100">M</text>
            <text class="svgText" x="500" y="100">O</text>
            <text class="svgText" x="600" y="100">S</text>
        </svg>
    </div>

    <div class="divider"></div>

    <div class="bottom">
        <ul>
            <li>
                <a onclick="ReplacePage('@Url.Action("Index", "Main")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-house menu-icons fa-fw @(currentPage == @Url.Action("index", "Main") ? "active" : "")"></i>
                        <p>Hoofdmenu</p>
                    </div>
                </a>
            </li>

            <h5 class="Heading">Zermelo</h5>

            <li>
                <a onclick="ReplacePage('@Url.Action("Rooster", "Zermelo")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-calendar-day menu-icons fa-fw @(currentPage == @Url.Action("Rooster", "Zermelo") ? "active" : "")"></i>
                        <p>Rooster</p>
                    </div>
                </a>
            </li>


            <h5 class="Heading">SOMtoday</h5>

            <li>
                <a onclick="ReplacePage('@Url.Action("Huiswerk", "Somtoday")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-pen-to-square menu-icons fa-fw @(currentPage == @Url.Action("Huiswerk", "Somtoday") ? "active" : "")"></i>
                        <p>Huiswerk</p>
                    </div>
                </a>
            </li>

            <li>
                <a onclick="ReplacePage('@Url.Action("Cijfers", "Somtoday")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-line-chart menu-icons fa-fw @(currentPage == @Url.Action("Cijfers", "Somtoday") ? "active" : "")"></i>
                        <p>Cijfers</p>
                    </div>
                </a>
            </li>


            <h5 class="Heading">School</h5>

            <li>
                <a onclick="ReplacePage('@Url.Action("InformatieBoord", "School")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-info-circle menu-icons fa-fw @(currentPage == @Url.Action("InformatieBoord", "School") ? "active" : "")"></i>
                        <p>Informatie bord</p>
                    </div>
                </a>
            </li>


            <h5 class="Heading">De Antonius app</h5>

            <li>
                <a onclick="ReplacePage('@Url.Action("SchoolNieuws", "Infowijs")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-newspaper menu-icons fa-fw @(currentPage == @Url.Action("SchoolNieuws", "Infowijs") ? "active" : "")"></i>
                        <p>School nieuws</p>
                    </div>
                </a>
            </li>

            <li>
                <a onclick="ReplacePage('@Url.Action("SchoolKalender", "Infowijs")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-calendar-days menu-icons fa-fw @(currentPage == @Url.Action("SchoolKalender", "Infowijs") ? "active" : "")"></i>
                        <p>School kalender</p>
                    </div>
                </a>
            </li>

            <li style="display: none" class="hidden-account">
                <a onclick="ReplacePage('@Url.Action("ShowAccount", "Account")')">
                    <div class="menu-item">
                        <i class="fa-solid fa-user menu-icons fa-fw @(currentPage == @Url.Action("ShowAccount", "Account") ? "active" : "")"></i>
                    </div>
                </a>
            </li>

            <div class="spacer"></div>
        </ul>
    </div>
    <div class="docs">
        <img class="docs-image background-tint"/>
        <h4>Hulp nodig?</h4>
        <p>Check hoe je Zermos kunt gebruiken</p>
        <a href="https://zermos-docs.kronk.tech">Bekijk de documentatie</a>
    </div>
</div>

<div class="top-bar">
    <div class="top-right-profile-picture">
        <a onclick="ReplacePage('@Url.Action("ShowAccount", "Account")')">
            <i class="fa-solid fa-user menu-icons fa-fw @(currentPage == @Url.Action("ShowAccount", "Account") ? "active" : "")"></i>
        </a>
    </div>

    <div class="backbutton" onclick="window.history.back()">
        <i class="fa-solid fa-angle-left"></i>
    </div>

    <div class="forewardbutton" onclick="window.history.forward()">
        <i class="fa-solid fa-angle-right"></i>
    </div>
</div>

@if (Context.Request.Cookies["version"] == null && !(bool) (Context.Items["loading"] ?? true) && Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") != "Development")
{
    Context.Response.Cookies.Append("version", Environment.GetEnvironmentVariable("ZERMOS-WEB-VERSION") ?? string.Empty, new CookieOptions {Expires = DateTime.Now.AddDays(60)});
    <div class="version">
        <p>Je gebruikt momenteel de <b>nieuwste</b> versie van Zermos</p>
    </div>
}
else if (Context.Request.Cookies["version"] != Environment.GetEnvironmentVariable("ZERMOS-WEB-VERSION") && !(bool) (Context.Items["loading"] ?? true) && Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") != "Development")
{
    Context.Response.Cookies.Append("version", Environment.GetEnvironmentVariable("ZERMOS-WEB-VERSION") ?? string.Empty, new CookieOptions {Expires = DateTime.Now.AddDays(60)});
    <div class="version">
        <p>Er is een nieuwe versie van Zermos (@(Environment.GetEnvironmentVariable("ZERMOS-WEB-VERSION") ?? string.Empty)), bekijk <a href="https://zermos-docs.kronk.tech">hier</a> wat er nieuw is</p>
    </div>
}

<div id="content">
    <div class="loader-text">
        De pagina wordt geladen
    </div>
    <div class="loading-dots-container">
        <div class="loading-dots"></div>
        <div class="loading-dots"></div>
        <div class="loading-dots"></div>
    </div>
</div>
<main class="main" id="main">
    @RenderBody()
</main>

@{
    //if body isn't _Loading.cshtml show notifs
    if (ViewContext.View.Path != "/Views/Shared/_Loading.cshtml")
    {
        <div class="notifications">
            @foreach (var notification in Context.GetNotifications())
            {
                <div class="notification @notification.Type">
                    <h1>@notification.Type - @notification.Title</h1>
                    <p>@notification.Body</p>
                </div>
            }
        </div>

    }
}
<script id="vital-script">
    function ReplacePage(url) {
        
        // Define a function to append a script to either the head or body
        function appendScript(element, codeOrSrc, isSrc) {
            const script = document.createElement("script");
            if (isSrc) {
                script.src = codeOrSrc;
            } else {
                script.innerHTML = codeOrSrc;
            }
            script.id = "added-by-fetch";
            element.appendChild(script);
        }

        // Define a function to append a stylesheet link to the head
        function appendStylesheet(href) {
            const link = document.createElement("link");
            link.rel = "stylesheet";
            link.href = href;
            link.id = "added-by-fetch";
            document.head.appendChild(link);
        }
        
        const contentElement = document.getElementById("content");
        document.getElementsByClassName("loader-text")[0].innerHTML = loadingTexts[Math.floor(Math.random() * loadingTexts.length)];

        //set loading-text to one of the followin
        
        contentElement.style.opacity = "1";
        // Make an AJAX request
        $.ajax({
            url: url,
            success: function(data) {
                modifyUrl("Zermos", url);
                const el = document.createElement('html');
                el.innerHTML = data;


                setTimeout(function() {
                    let i  ;
//remove all items with id added-by-fetch
                    const elements = document.querySelectorAll("#added-by-fetch");
                    for (i= 0; i < elements.length; i++) {
                        elements[i].remove();
                    }
                    
                    var cleanedData = stripScripts("link", stripScripts("script", data));

                    // Update main content
                    main.outerHTML = main.outerHTML;
                    main.innerHTML = cleanedData;

                    const scripts = el.getElementsByTagName("script");
                    const head = document.head;
                    const body = document.body;

                    for (i= 0; i < scripts.length; i++) {
                        if (scripts[i].src) {
                            appendScript(head, scripts[i].src, true);
                        } else {
                            appendScript(body, scripts[i].innerHTML, false);
                        }
                    }

                    const links = el.getElementsByTagName("link");
                    for (i= 0; i < links.length; i++) {
                        if (links[i].rel === "stylesheet") {
                            appendStylesheet(links[i].href);
                        }
                    }
                    
                    main.dispatchEvent(new Event("main:load"));

                    contentElement.style.opacity = "0";
                }, 250);
            },
            error: function(xhr, status, error) {
                console.log(error);
            },
            cache: false,
            type: 'GET'
        });


        function stripScripts(tag, data) {
            const div = document.createElement('div');
            div.innerHTML = data;
            const scripts = div.getElementsByTagName(tag);
            let i = scripts.length;
            while (i--) {
                scripts[i].parentNode.removeChild(scripts[i]);
            }
            return div.innerHTML;
        }

    }
    
    function modifyUrl(title, url) {
        if (typeof(history.pushState) != "undefined") {
            const obj = {
                Title: title,
                Url: url
            };
            history.pushState(obj, obj.Title, obj.Url);
        }
    }
    
    //
    window.addEventListener('popstate', function (e) {
        const state = e.state;
        if (state !== null) {
            ReplacePage(state.Url);
        }
    });
    
    const loadingTexts = [
        "Tijd en Ruimte omwisselen",
        "heftig rond draaien",
        "Een lepel buigen",
        "Denk niet aan paarse nijlpaarden",
        "Leuke dag?",
        "Lachen laadt Zermos sneller!",
        "En geniet van de liftmuziek",
        "Even geduld a.u.b. terwijl de kleine elven je pagina tekenen",
        "Wil je daar frietjes bij?",
        "De zwaartekrachtconstante in uw omgeving controleren",
        "Ga je gang - houd je adem in!",
        "Je staat tenminste niet in de wacht",
        "De server wordt aangedreven door een citroen",
        "We stellen je geduld op de proef",
        "Alsof je een andere keuze had",
        "Wachten totdat de satelliet in positie komt",
        "Zijn we er al?",
        "Tel maar tot 10",
        "Waarom zo serieus?",
        "Terugtellen vanaf oneindig",
        "Geen paniek",
        "Dus... Kom je hier vaak?",
        "Waarschuwing: steek jezelf niet in de hens",
        "We maken een koekje voor je",
        "Het rad van fortuin draaien",
        "Kans op succes berekenen",
        "Hoe noem je 8 Hobbits? Een Hobbyte",
        "Is dit Windows?",  
        "Wacht alstublieft tot de luiaard begint te bewegen", 
        "Ik zweer dat het bijna klaar is",
        "Laten we een minuutje mindfulness nemen",
        "Luisteren naar het geluid van één hand die klapt",
        "Zorgen dat alle puntjes hieronder staan",
        "De hamster laten draaien",
        "AI overtuigen om niet kwaad te worden",
        "Hoe ben je hier gekomen?",
        "Wacht, ruik je iets brandends?",
        "42",
        "Ik denk dat ik ben, daarom ben ik. Denk Ik",
        "het gebeurt",
        "Een paar zeeschildpadden vastbinden",
        "Wat is de vliegsnelheid van een onbeladen zwaluw?",
        "Ik wist niet dat verf zo snel droogde.",
        "De hond uitlaten",
        "Delen door nul",
        "Als dit over 5 minuten niet klaar is, wacht dan gewoon langer.",
        "We hebben een grotere boot nodig.",
        "Webontwikkelaars doen het met <style>",
        "Encryptie op militair niveau kraken",
        "Op zoek naar gevoel voor humor, wacht even",
        "BRB",
        "TODO: grappig laadbericht invoegen",
        "Laten we hopen dat het het wachten waard is",
        "Draai gerust rond in je stoel",
        "Wat de wat?",
        "Meer RAM downloaden",
        "Alt-F4 versnelt dingen",
        "Pixels duwen",
        "Lekker weertje hè",
        "Een muur bouwen",
        "Alles in dit universum is een aardappel of geen aardappel",
        "Geduld, het is moeilijk!",
        "Nieuwe manieren ontdekken om je te laten wachten",
        "TODO: Liftmuziek invoegen",
        "Het zware werk doen",
        "We werken heel hard ... Echt",
        "je bent nummer 2147483647 in de wachtrij",
        "Eenhoorns voeren",
        "Vind je mijn laadanimatie leuk? Ik heb hem zelf gemaakt",
        "Een mississippi, twee mississippi...",
        "Geen paniek... AHHHHH!",
        "Zorgen dat kabouters nog steeds kort zijn.",
        "IJs bakken...",
    ];
</script>
@await RenderSectionAsync("Scripts", false)
@* <script> *@
@*     if('serviceWorker' in navigator) { *@
@*         navigator.serviceWorker.register('/serviceworker.js') *@
@*             .then(function() { *@
@*                 console.log("[ SERVICE WORKER ] Registered"); *@
@*             }); *@
@*     } *@
@* </script> *@
</body>
</html>
