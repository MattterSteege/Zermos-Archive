@using System.Globalization
@using Zermos_Web.Models.zermelo
@using Zermos_Web.Utilities
@model Zermos_Web.Models.zermelo.ZermeloRoosterModel

@{
    ViewData["title"] = "title";
}

<link rel="stylesheet" href="/css/zermelo.css" />
<script src="/js/dom-to-image.js"></script>

<div class="main-container">
    <div class="week-carousel" id="week-carousel">
        <div class="week" data-week="@Model.response.data[0].MondayOfAppointmentsWeek.GetWeekNumber()"></div>
        <div class="week" data-week="@Model.response.data[0].MondayOfAppointmentsWeek.GetWeekNumber()" data-unix="@Model.response.data[0].MondayOfAppointmentsWeek.ToUnixTime()">
            <div class="times-container">
                <ul>
                    <!--        20 horizontal lines-->
                    <li></li>
                    <li></li>
                    <li></li>
                    <li></li>
                    <li></li>
                    <li></li>
                    <li></li>
                    <li></li>
                    <li></li>
                    <li></li>
                    <li></li>
                    <li></li>
                    <li></li>
                </ul>
            </div>
            <div class="days-container">
                <ul>
                    <li>@Model.response.data[0].MondayOfAppointmentsWeek.GetWeekNumber()</li>
                    <li>Ma<div class="date"> - @Model.response.data[0].MondayOfAppointmentsWeek.ToString("dd MMM")</div></li>
                    <li>Di<div class="date"> - @Model.response.data[0].MondayOfAppointmentsWeek.AddDays(1).ToString("dd MMM")</div></li>
                    <li>Wo<div class="date"> - @Model.response.data[0].MondayOfAppointmentsWeek.AddDays(2).ToString("dd MMM")</div></li>
                    <li>Do<div class="date"> - @Model.response.data[0].MondayOfAppointmentsWeek.AddDays(3).ToString("dd MMM")</div></li>
                    <li>Vr<div class="date"> - @Model.response.data[0].MondayOfAppointmentsWeek.AddDays(4).ToString("dd MMM")</div></li>
                </ul>
            </div>
            <div class="hours-container">
                <ul>
                    <li></li>
                    <li>08:20</li> <!-- 1st hour -->
                    <li>09:10</li> <!-- 2nd hour -->
                    <li>10:00</li> <!-- break -->
                    <li>10:15</li> <!-- 3rd hour -->
                    <li>11:05</li> <!-- 4th hour -->
                    <li>11:55</li> <!-- break -->
                    <li>12:25</li> <!-- 5th hour -->
                    <li>13:15</li> <!-- 6th hour -->
                    <li>14:05</li> <!-- 7th hour -->
                    <li>14:55</li> <!-- break -->
                    <li>15:10</li> <!-- 8th hour -->
                    <li>16:00</li> <!-- 9th hour -->
                    <li></li> <!-- end schoolday -->
                </ul>
            </div>
            <div class="lessons-container">
                <ul>
                    @foreach (DayOfWeek day in Enum.GetValues(typeof(DayOfWeek)))
                    {
                        @if (Model.response.data[0].appointments.Count == 0)
                        {
                            <li class="empty">Wow, de hele week vrij!</li>
                            break;
                        }
                
                        if (day != DayOfWeek.Saturday && day != DayOfWeek.Sunday)
                        {
                            <li class="lesdag">
                                @{
                                    IEnumerable<Appointment> appointmentList = Model.response.data[0].appointments.Where(a => a.start.ToDateTime().DayOfWeek == day).ToList();
                
                                    if (!appointmentList.Any())
                                        continue;
                
                                    //100 means 100% of the height of the container
                                    //510 means 510 minutes between 08:20 and 16:50
                                    var minuteHeight = 100f / 510f;
                
                                    //get the date of the day that the appointments are for
                                    //8 * 60 + 20 = 500 minutes means 08:20
                                    var dayStartUnix = appointmentList.First().start; // this is unix. make the unix time to be the same date but the time should be 08:20
                                    dayStartUnix -= dayStartUnix % 86400; // remove the time from the unix time
                                    dayStartUnix += 8 * 60 * 60 + 20 * 60; // add 8 hours and 20 min to the unix time (08:20)
                
                                    // Define the time zones for UTC and the Dutch timezone
                                    TimeZoneInfo dutchTimeZone = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time"); // This ID represents the Dutch timezone
                                    DateTime utcDateTime = DateTimeOffset.FromUnixTimeSeconds(dayStartUnix).UtcDateTime;
                                    DateTime dutchDateTime = TimeZoneInfo.ConvertTimeFromUtc(utcDateTime, dutchTimeZone);
                                    TimeSpan timeDifference = dutchDateTime - utcDateTime;
                                    int timeDifferenceInSeconds = (int) timeDifference.TotalSeconds;
                
                                    dayStartUnix -= timeDifferenceInSeconds;
                                }
                
                                @foreach (var appointment in appointmentList)
                                {
                                    //percentage from top = (appointment start time - dayStartUnix) * minuteHeight *@
                                    //appointment height = (appointment end time - appointment start time) * minuteHeight
                
                                    var appointmentHeight = (appointment.end - appointment.start) / 60f * minuteHeight;
                                    var lessonStart = appointment.start;
                                    var appointmentTop = (lessonStart - dayStartUnix) / 60f * minuteHeight;
                
                                    <div class="lesson-time-based @(appointment.cancelled ? "canceled" : "") @appointment.appointmentType" style="top: @(appointmentTop.ToString("0.000", CultureInfo.InvariantCulture))%; height: calc(@(appointmentHeight.ToString("0.000", CultureInfo.InvariantCulture))% - 8px);" onclick="OpenLessonDetail('@(appointment.ObjectToBase64String())')">
                                        @(appointment.subjects.Count > 0 ? Html.Raw("<p>" + appointment.subjects[0] + "</p>") : "")
                                        @(appointment.locations.Count > 0 ? Html.Raw("<p>" + appointment.locations[0] + "</p>") : "")
                                    </div>
                                }
                            </li>
                        }
                    }
                </ul>
                
            </div>
        </div>
        <div class="week" data-week="@Model.response.data[0].MondayOfAppointmentsWeek.GetWeekNumber()"></div>
    </div>
</div>

<script>
function OpenLessonDetail(base64){
    const json = JSON.parse(atob(base64));
    
    var lessonDetail = new ZermosModal()
    .setTitle((json.subjects[0] ?? '?') + " - " + new Date(json.start * 1000).toLocaleDateString("nl-NL", { weekday: 'long', month: 'short', day: 'numeric'}));
    
        lessonDetail.addText("Degene die dit rooster gedeeld heeft:");
    if (json.teachers.length > 0) 
        lessonDetail.addText("• heeft les van " + json.teachers.join(", ") + ".");
    if (json.locations.length > 0) 
        lessonDetail.addText("• in lokaal " + json.locations.join(", ") + ".");
    if (json.groups.length > 0) 
        lessonDetail.addText("• met groep " + json.groups.join(", ") + ".");   
    
    lessonDetail.addText("De les is van: " + new Date(json.start * 1000).toLocaleDateString("nl-NL", {hour: '2-digit', minute:'2-digit'}).split(" ")[1] + " tot " + new Date(json.end * 1000).toLocaleDateString("nl-NL", {hour: '2-digit', minute:'2-digit'}).split(" ")[1])
    .hideSubmitButton();
    
    for (var i = 0; i < json.status.length; i++) {
        var status = json.status[i];

        if (status['code'] === 2002) continue;
        
        lessonDetail.addText("• " + status.nl);
    }
    
    lessonDetail.open();
}
</script>