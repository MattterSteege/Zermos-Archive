@using Zermos_Web.Utilities
@model Infrastructure.Entities.user

<link rel="stylesheet" href="/css/account.css" preload>

<div class="settings-container">
    <div class="setting-item">
        <h1>Thema's</h1>
        <p>Welke thema wil je gebruiken?</p>
        <div class="settings-options">
            <button id="1_light" onclick="UpdateTheme('light', this)" class="setting-button@(Model.theme == "light" ? " selected" : "")">licht</button>
            <button id="1_dark" onclick="UpdateTheme('dark', this)" class="setting-button@(Model.theme == "dark" ? " selected" : "")">donker</button>
            <button id="1_red" onclick="UpdateTheme('red', this)" class="setting-button@(Model.theme == "red" ? " selected" : "")">rood</button>
            <button id="1_blue" onclick="UpdateTheme('blue', this)" class="setting-button@(Model.theme == "blue" ? " selected" : "")">blauw</button>
            <button id="1_pink" onclick="UpdateTheme('pink', this)" class="setting-button@(Model.theme == "pink" ? " selected" : "")">roze</button>
        </div>
    </div>

    <div class="setting-item">
        <h1>Laad pagina</h1>
        <p>Welke pagina wil je zien als je Zermos opent?</p>
        <div class="settings-options">
            <button id="2_Rooster" onclick="UpdateSetting('default_page', '/Zermelo/Rooster', this)" class="setting-button@(Model.default_page == "/Zermelo/Rooster" ? " selected" : "")">Je rooster</button>
            <button id="2_Cijfers" onclick="UpdateSetting('default_page', '/Somtoday/Cijfers', this)" class="setting-button@(Model.default_page == "/Somtoday/Cijfers" ? " selected" : "")">Je cijfers</button>
            <button id="2_Huiswerk" onclick="UpdateSetting('default_page', '/Somtoday/Huiswerk', this)" class="setting-button@(Model.default_page == "/Somtoday/Huiswerk" ? " selected" : "")">Je huiswerk</button>
            <button id="2_SchoolNieuws" onclick="UpdateSetting('default_page', '/Infowijs/Schoolnieuws', this)" class="setting-button@(Model.default_page == "/Infowijs/Schoolnieuws" ? " selected" : "")">Het schoolnieuws</button>
            <button id="2_SchoolKalender" onclick="UpdateSetting('default_page', '/Infowijs/Schoolkalender', this)" class="setting-button@(Model.default_page == "/Infowijs/Schoolkalender" ? " selected" : "")">De schoolkalender</button>
            <button id="2_informatiebord" onclick="UpdateSetting('default_page', '/School/informatiebord', this)" class="setting-button@(Model.default_page == "/School/informatiebord" ? " selected" : "")">Het informatiebord</button>
        </div>
    </div>

    <div class="setting-item">
        <h1>Handig?</h1>
        <p>Welke hand gebruik je voor zermos?</p>
        <div class="settings-options">
            <button id="3_Links" onclick="UpdateHandSide('left', this)" class="setting-button@(Model.hand_side == "left" ? " selected" : "")">Met mijn linker hand</button>
            <button id="3_Rechts" onclick="UpdateHandSide('right', this)" class="setting-button@(Model.hand_side == "right" ? " selected" : "")">Met mijn rechter hand</button>
        </div>
    </div>
    
    <div class="setting-item">
        <h1>Lettergrootte</h1>
        <p>Hoe goed zijn je ogen?</p>
        <div class="settings-options">
            <button id="4_goed" onclick="UpdateFontSize('font-scale-1', this)" class="setting-button@(Model.font_size == "font-scale-1" ? " selected" : "")">Goed (100%)</button>
            <button id="4_redelijk" onclick="UpdateFontSize('font-scale-2', this)" class="setting-button@(Model.font_size == "font-scale-2" ? " selected" : "")">Redelijk (125%)</button>
            <button id="4_kan" onclick="UpdateFontSize('font-scale-3', this)" class="setting-button@(Model.font_size == "font-scale-3" ? " selected" : "")">Kan beter (150%)</button>
            <button id="4_meh" onclick="UpdateFontSize('font-scale-4', this)" class="setting-button@(Model.font_size == "font-scale-4" ? " selected" : "")">Meh (175%)</button>
            <button id="4_slecht" onclick="UpdateFontSize('font-scale-5', this)" class="setting-button@(Model.font_size == "font-scale-5" ? " selected" : "")">Slecht (200%)</button>
        </div>
    </div>
    
    <div class="setting-item">
        <h1>Lettertype</h1>
        <p>Welk lettertype wil je gebruiken?</p>
        <div class="settings-options">
            @*Model.prefers_font; euclid, inter, roboto, monospace, normal*@
            <button id="5_euclid" onclick="UpdateFont('euclid', this)" class="setting-button@(Model.prefers_font == "euclid" ? " selected" : "")@(Model.prefers_font.IsNullOrEmpty() ? " selected" : "")">Euclid</button>
            <button id="5_normal" onclick="UpdateFont('open-sans', this)" class="setting-button@(Model.prefers_font == "open-sans" ? " selected" : "")">Open Sans</button>
            <button id="5_monospace" onclick="UpdateFont('monospace', this)" class="setting-button@(Model.prefers_font == "monospace" ? " selected" : "")">Monospace</button>
            <button id="5_roboto" onclick="UpdateFont('roboto', this)" class="setting-button@(Model.prefers_font == "roboto" ? " selected" : "")">Roboto</button>
            <button id="5_inter" onclick="UpdateFont('inter', this)" class="setting-button@(Model.prefers_font == "inter" ? " selected" : "")">Inter</button>
        </div>
    </div>

    <div class="setting-item">
        <h1>Rooster</h1>
        <p>Wat zijn jouw schooltijden</p>
        <div class="settings-options">
            <input type="time" id="5_start_time" name="start_time" min="08:00" max="18:00" value="@Model.zermelo_timestamps?.Split("-")[0]"/>
            <input type="time" id="5_end_time" name="end_time" min="08:00" max="18:00" value="@Model.zermelo_timestamps?.Split("-")[1]"/>
            <button id="6_save" onclick="UpdateSchooltijen(this)" class="setting-button">Opslaan</button>
        </div>
    </div>
    
    <div class="setting-item">
        <h1>Rooster</h1>
        <p>Welke rooster engine geef je de voorkeur aan. Deze wordt alleen gebruikt als dat mogelijk is! Er is amper verschil, maar Zermelo is over het algemeen sneller.<br>Er is wel een herstart van de app vereist!</p>
        <div class="settings-options">
            <button id="7_zermelo" onclick="UpdateRoosterEngine('zermelo', this)" class="setting-button@(Model.prefered_rooster_engine != "somtoday" ? " selected" : "")">Zermelo</button>
            <button id="7_somtoday" onclick="UpdateRoosterEngine('somtoday', this)" class="setting-button@(Model.prefered_rooster_engine == "somtoday" ? " selected" : "")">Somtoday</button>
        </div>
    </div>
</div>

<script minimize>
@Context.Items["dmjs"]

function UpdateTheme(theme, element) {
    document.documentElement.classList.remove("light");
    document.documentElement.classList.remove("dark");
    document.documentElement.classList.remove("red");
    document.documentElement.classList.remove("blue");
    document.documentElement.classList.remove("pink");
    document.querySelector("meta[name=theme-color]").setAttribute("content", theme === "light" || theme === "blue" ? "#f8f9fa" : theme === "dark" || theme === "red" ? "#1a1a1a" : theme === "pink" ? "#ffebf2" : "#f8f9fa");
    document.documentElement.classList.add(theme);
    
    //expires in 60 days
    document.cookie = "theme=" + theme + ";path=/;max-age=5184000";
    UpdateSetting("theme", theme, element);
}

function UpdateHandSide(side, element) {
    document.documentElement.classList.remove("left");
    document.documentElement.classList.remove("right");
    document.documentElement.classList.add(side);
    document.cookie = "hand_side=" + side + ";path=/;max-age=5184000";
    UpdateSetting("hand_side", side, element);
}

function UpdateDefaultPage(page, element) {
    document.cookie = "default_page=" + page + ";path=/;max-age=5184000";
    UpdateSetting("default_page", page, element);
}

function UpdateFontSize(value, element) {
    document.documentElement.classList.remove("font-scale-1");
    document.documentElement.classList.remove("font-scale-2");
    document.documentElement.classList.remove("font-scale-3");
    document.documentElement.classList.remove("font-scale-4");
    document.documentElement.classList.remove("font-scale-5");
    document.documentElement.classList.add(value);
    document.cookie = "font_size=" + value + ";path=/;max-age=5184000";
    UpdateSetting("font_size", value, element);
}

function UpdateFont(font, element) {
    document.documentElement.classList.remove("normal-font");
    document.documentElement.classList.remove("euclid-font");
    document.documentElement.classList.remove("monospace-font");
    document.documentElement.classList.remove("roboto-font");
    document.documentElement.classList.remove("inter-font");
    document.documentElement.classList.add(font + "-font");
    
    if (font === "euclid" || font === "normal") {
        var link = document.createElement("link");
        link.rel = "stylesheet";
        link.href = "/Fonts/EuclidCircularA/EuclidCircularA.css";
        document.head.appendChild(link);
    } else if (font === "inter") {
        var link = document.createElement("link");
        link.rel = "stylesheet";
        link.href = "/Fonts/Inter Web/inter.css";
        document.head.appendChild(link);
    } else if (font === "roboto") {
        var link = document.createElement("link");
        link.rel = "stylesheet";
        link.href = "https://fonts.googleapis.com/css?family=Roboto:300,400,600,700";
        document.head.appendChild(link);
    } else if (font === "open-sans") {
        var link = document.createElement("link");
        link.rel = "stylesheet";
        link.href = "https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700";
        document.head.appendChild(link);
    }
    
    document.cookie = "prefers_font=" + font + ";path=/;max-age=5184000";
    UpdateSetting("prefers_font", font, element);
}

function UpdateSchooltijen(element) {
    var start_time = document.getElementById("5_start_time").value;
    var end_time = document.getElementById("5_end_time").value;
    UpdateSetting("zermelo_timestamps", start_time + "-" + end_time, element);
}

function UpdateRoosterEngine(engine, element) {
    document.cookie = "prefered_rooster_engine=" + engine + ";path=/;max-age=5184000";
    UpdateSetting("prefered_rooster_engine", engine, element);
    setTimeout(() => {
        location.reload();
    }, 500);
}

function UpdateSetting(key, value, element) {   
    var url = "/Account/UpdateSetting?key=" + key + "&value=" + value;
    fetch(url, {
        method: 'POST'
    })
    //plain text is returned, either 200 or 400
    .then(response => response.text())
    .then((response) => {
        //if status is 200
        if (response === "200") {
            
            element = document.getElementById(element.id);
            var siblings = element.parentNode.children;
            
            for (var i = 0; i < siblings.length; i++) {
                siblings[i].classList.remove("selected");
            }
            
            element.classList.add("selected");
            
        } else {
            console.error("Error: " + response);
        }
    });
}

</script>