@using Zermos_Web.Utilities
@using Infrastructure.Entities
@model dynamic


<link rel="stylesheet" href="/css/account.css">

<div class="account-container">
    <div class="account-item" onclick="ReplacePage('@Url.Action("Debug", "Account")')" id="profile">
        <h1>Profiel</h1>
        <p>@Model.user.email - @Model.user.name</p>
    </div>
    
    <div id="absence" onclick="ShowAbscence()" class="account-item clickable">
        <h1>Afwezigheid</h1>
        <p>Je bent dit jaar <b>een paar keer</b> keer afwezig geweest.</p>
    </div>
    
    <div class="account-item">
        <h1>Gedeelde links</h1>
        @foreach(share share in Model.shares)
        {
            <p><b>@share.page</b> - geldig tot: @share.expires_at.ToString("d/M/yyyy") - <a href="@share.url">Bekijk hier</a></p>
        }
    </div>
    
    <div class="account-item" onclick="window.location.href='https://zermos-docs.kronk.tech/PWA%20installeren'">
        <h1>Zermos installeren</h1> 
        <a>Klik hier voor de uitleg</a>
    </div>
    
    <div onclick="ReplacePage('@Url.Action("Settings", "Account")')" class="account-item clickable">
        <h1>Instellingen</h1>
        <p>Hier kan je verschillende instellingen aanpassen</p>
    </div>

    <div class="account-item" id="info">
        <div class="overlay-account-info-grid">
            <div class="left">
                <h1>Opgeslagen informatie</h1>
                <p>De volgende dingen zijn opgeslagen om Zermos goed te kunnen gebruiken (klik om te openen)</p>
            </div>
            <div class="right"><i class="fa-solid fa-angle-down" id="openCloseArrow" style="transition: all 0.5s ease 0s;"></i></div>
        </div>
        <div class="account-info-grid hidden">
            @{
                //Loop trough all the properties of the user object and display them like this: [name]: [value (capt at 25 characters)]
                foreach (var property in ((user) Model.user).GetType().GetProperties())
                {
                    //if property is not { get; set; } then skip it
                    if (property.GetMethod == null || property.SetMethod == null || property.GetValue((user) Model.user, null) == null || property.Name == "settings")
                    {
                        continue;
                    }

                    <p><b>@property.Name</b></p>
                }
            }
        </div>
    </div>

    <div class="account-item">
        <h1 onclick="ReplacePage('@Url.Action("Index", "Koppelingen")')" style="text-decoration: underline; cursor: pointer;">Koppelingen</h1>
        <div class="account-info-grid">
            <div class="infowijs">
                @if (TokenUtils.CheckToken(((user) Model.user).infowijs_access_token))
                {
                    <p><b>Infowijs</b>, geldig tot: @(TokenUtils.GetTokenExpiration(((user) Model.user).infowijs_access_token).ToString("d/M/yyyy"))</p>
                    <button id="infowijs-first" onclick="AreYouSure('infowijs')" class="koppel-knop ontkoppelen">Ontkoppelen</button>

                    <form method="POST" asp-controller="Koppelingen" asp-action="Ontkoppel" asp-route-app="infowijs">
                        <button id="infowijs-second" class="koppel-knop zeker" style="display: none">Zeker?</button>
                    </form>
                }
                else
                {
                    <p><b>Infowijs</b> is niet gekoppeld</p>
                    <button onclick="ReplacePage('@Url.Action("Infowijs", "Koppelingen")')" class="koppel-knop koppelen">Koppelen</button>
                }
            </div>
            <div class="zermelo">
                @if (((user) Model.user).zermelo_access_token_expires_at > DateTime.Now)
                {
                    <p><b>Zermelo</b>, geldig tot: @(((user) Model.user).zermelo_access_token_expires_at?.ToString("d/M/yyyy"))</p>
                    <button id="zermelo-first" onclick="AreYouSure('zermelo')" class="koppel-knop ontkoppelen">Ontkoppelen</button>

                    <form method="POST" asp-controller="Koppelingen" asp-action="Ontkoppel" asp-route-app="zermelo">
                        <button id="zermelo-second" class="koppel-knop zeker" style="display: none">Zeker?</button>
                    </form>
                }
                else
                {
                    <p><b>Zermelo</b> is niet gekoppeld</p>
                    <button onclick="ReplacePage('@Url.Action("Zermelo", "Koppelingen")')" class="koppel-knop koppelen">Koppelen</button>
                }
            </div>

            <div class="somtoday">
                @if (TokenUtils.CheckToken(((user) Model.user).somtoday_refresh_token))
                {
                    <p><b>Somtoday</b>, geldig tot: @(TokenUtils.GetTokenExpiration(((user) Model.user).somtoday_refresh_token).ToString("d/M/yyyy"))</p>
                    <button id="somtoday-first" onclick="AreYouSure('somtoday')" class="koppel-knop ontkoppelen">Ontkoppelen</button>

                    <form method="POST" asp-controller="Koppelingen" asp-action="Ontkoppel" asp-route-app="somtoday">
                        <button id="somtoday-second" class="koppel-knop zeker" style="display: none">Zeker?</button>
                    </form>
                }
                else
                {
                    <p><b>Somtoday</b> is niet gekoppeld</p>
                    <button onclick="ReplacePage('@Url.Action("Somtoday", "Koppelingen")')" class="koppel-knop koppelen">Koppelen</button>
                }
            </div>
            
        </div>
    </div>

    <div class="account-item">
        <h1>Uitloggen?</h1>
        <button onclick="ReplacePage('/logout')" class="koppel-knop ontkoppelen">Wil je uitloggen?</button>
    </div>
</div>

<script minimize>
@Context.Items["dmjs"]

    function AreYouSure(app) {
        document.getElementById(app + '-first').style.display = 'none';
        document.getElementById(app + '-second').style.display = 'block';
        
         new Promise(res => setTimeout(res, 3000)).then(() => {
            document.getElementById(app + '-first').style.display = 'block';
            document.getElementById(app + '-second').style.display = 'none';
        });
    }
    
     Zermos.mainBeforeLoad = () => {   
        //when clicking on #info, toggle the hidden class on the opgeslagen-informatie-grid
        document.getElementById('info').addEventListener('click', function() {
            document.querySelector('.account-info-grid').classList.toggle('hidden');
            document.getElementById('openCloseArrow').style.transform = document.getElementById('openCloseArrow').style.transform === 'rotate(180deg)' ? 'rotate(0deg)' : 'rotate(180deg)';
        });
    };

    var abscence = null;

    //fetch /Refresh the absence data
    fetch('/Somtoday/Afwezigheid')
    .then(response => response.text())
    .then(data => {
        abscence = JSON.parse(data);
        document.getElementById('absence').innerHTML = '<h1>Afwezigheid</h1><p>Je bent dit jaar <b>' + abscence.items.length + '</b> keer afwezig geweest.</p>';
    });

    function ShowAbscence() {
        var abscenceModal = new ZermosModal()
        
        abscence.items.forEach(absence => {
            abscenceModal
            .addText("<hr>")
            .addText(absence.absentieReden.omschrijving)
            .addText(absence.opmerkingen);
            var dateStart = new Date(absence.beginDatumTijd);
            var dateEnd = new Date(absence.eindDatumTijd);
            abscenceModal.addText(dateStart.toLocaleDateString() + ' ' + dateStart.toLocaleTimeString() + ' - ' + dateEnd.toLocaleTimeString() + ' ' + dateEnd.toLocaleDateString());
        });

        abscenceModal.setTitle('Afwezigheid')
        .setSubmitButtonLabel('Sluiten')
        .open();

    }

</script>